Terminals unused in grammar

    UMINUS
    '!'


Grammar

    0 $accept: start $end

    1 $@1: %empty

    2 start: $@1 slst

    3 slst: E slst
    4     | E

    5 BODY: slst
    6     | %empty

    7 E: STMT
    8  | DUMMY CONTROL

    9 DUMMY: %empty

   10 CONTROL: E1
   11        | E2

   12 $@2: %empty

   13 E1: WHILE '(' COND ')' CRLOP $@2 BODY CRLCL

   14 $@3: %empty

   15 E2: CRLOP $@3 BODY CRLCL

   16 COND: ANY CMP AFTER
   17     | ID ASSIGN AFTER
   18     | ANY

   19 STMT: VAR_DEC ';'
   20     | STRUCTDEC ';'

   21 $@4: %empty

   22 $@5: %empty

   23 $@6: %empty

   24 STMT: IF '(' COND $@4 ')' CRLOP BODY CRLCL $@5 ELSE CRLOP $@6 BODY CRLCL
   25     | ID ASSIGN AFTER ';'
   26     | PRE ';'

   27 VAR_DEC: TYPE NEXT
   28        | TYPE NEXT ASSIGN ANY

   29 TYPE: B
   30     | B PTRDEC

   31 B: INT
   32  | FLOAT
   33  | CHAR

   34 NEXT: ID
   35     | ARRM

   36 $@7: %empty

   37 ARRM: ID $@7 C

   38 PTRDEC: POINTER PTRDEC
   39       | POINTER

   40 $@8: %empty

   41 STRUCTDEC: STRUCT CRLOP $@8 INSSTR CRLCL OPTID

   42 OPTID: ID
   43      | %empty

   44 $@9: %empty

   45 INSSTR: TYPE NEXT $@9 ';' INSSTR
   46       | %empty

   47 $@10: %empty

   48 C: ARROP NUM $@10 D

   49 D: ARRCL
   50  | ARRCL C

   51 AFTER: AFTER '+' AFTER
   52      | AFTER '-' AFTER
   53      | AFTER XOR AFTER
   54      | AFTER BAND AFTER
   55      | AFTER BOR AFTER
   56      | PRE
   57      | LATER

   58 LATER: LATER POINTER LATER
   59      | LATER '/' LATER
   60      | ANY

   61 PRE: INC ID
   62    | ID INC
   63    | DEC ID
   64    | ID DEC

   65 ANY: NUM
   66    | ID
   67    | TRUE
   68    | FALSE

   69 CMP: EQ
   70    | NEQ
   71    | LOR
   72    | LAND
   73    | LTEQ
   74    | GTEQ
   75    | LT
   76    | GT

   77 ASSIGN: AEQ


Terminals, with rules where they appear

    $end (0) 0
    '!' (33)
    '(' (40) 13 24
    ')' (41) 13 24
    '+' (43) 51
    '-' (45) 52
    '/' (47) 59
    ';' (59) 19 20 25 26 45
    error (256)
    WHILE <string> (258) 13
    TRUE <string> (259) 67
    FALSE <string> (260) 68
    EQ <string> (261) 69
    NEQ <string> (262) 70
    LOR <string> (263) 71
    LAND <string> (264) 72
    LTEQ <string> (265) 73
    GTEQ <string> (266) 74
    LT <string> (267) 75
    GT <string> (268) 76
    XOR <string> (269) 53
    BOR <string> (270) 55
    BAND <string> (271) 54
    AEQ <string> (272) 77
    INC <string> (273) 61 62
    DEC <string> (274) 63 64
    NUM <string> (275) 48 65
    ID <string> (276) 17 25 34 37 42 61 62 63 64 66
    IF <string> (277) 24
    ELSE <string> (278) 24
    STRUCT <string> (279) 41
    INT <string> (280) 31
    FLOAT <string> (281) 32
    POINTER <string> (282) 38 39 58
    CHAR <string> (283) 33
    ARROP <string> (284) 48
    ARRCL <string> (285) 49 50
    CRLOP <string> (286) 13 15 24 41
    CRLCL <string> (287) 13 15 24 41
    UMINUS (288)


Nonterminals, with rules where they appear

    $accept (41)
        on left: 0
    start (42)
        on left: 2
        on right: 0
    $@1 (43)
        on left: 1
        on right: 2
    slst (44)
        on left: 3 4
        on right: 2 3 5
    BODY (45)
        on left: 5 6
        on right: 13 15 24
    E <string> (46)
        on left: 7 8
        on right: 3 4
    DUMMY <string> (47)
        on left: 9
        on right: 8
    CONTROL (48)
        on left: 10 11
        on right: 8
    E1 (49)
        on left: 13
        on right: 10
    $@2 (50)
        on left: 12
        on right: 13
    E2 (51)
        on left: 15
        on right: 11
    $@3 (52)
        on left: 14
        on right: 15
    COND <string> (53)
        on left: 16 17 18
        on right: 13 24
    STMT <string> (54)
        on left: 19 20 24 25 26
        on right: 7
    $@4 (55)
        on left: 21
        on right: 24
    $@5 (56)
        on left: 22
        on right: 24
    $@6 (57)
        on left: 23
        on right: 24
    VAR_DEC <string> (58)
        on left: 27 28
        on right: 19
    TYPE <string> (59)
        on left: 29 30
        on right: 27 28 45
    B <string> (60)
        on left: 31 32 33
        on right: 29 30
    NEXT <string> (61)
        on left: 34 35
        on right: 27 28 45
    ARRM <string> (62)
        on left: 37
        on right: 35
    $@7 (63)
        on left: 36
        on right: 37
    PTRDEC (64)
        on left: 38 39
        on right: 30 38
    STRUCTDEC <string> (65)
        on left: 41
        on right: 20
    $@8 (66)
        on left: 40
        on right: 41
    OPTID <string> (67)
        on left: 42 43
        on right: 41
    INSSTR <string> (68)
        on left: 45 46
        on right: 41 45
    $@9 (69)
        on left: 44
        on right: 45
    C <string> (70)
        on left: 48
        on right: 37 50
    $@10 (71)
        on left: 47
        on right: 48
    D <string> (72)
        on left: 49 50
        on right: 48
    AFTER <string> (73)
        on left: 51 52 53 54 55 56 57
        on right: 16 17 25 51 52 53 54 55
    LATER <string> (74)
        on left: 58 59 60
        on right: 57 58 59
    PRE <string> (75)
        on left: 61 62 63 64
        on right: 26 56
    ANY <string> (76)
        on left: 65 66 67 68
        on right: 16 18 28 60
    CMP <string> (77)
        on left: 69 70 71 72 73 74 75 76
        on right: 16
    ASSIGN <string> (78)
        on left: 77
        on right: 17 25 28


State 0

    0 $accept: . start $end

    $default  reduce using rule 1 ($@1)

    start  go to state 1
    $@1    go to state 2


State 1

    0 $accept: start . $end

    $end  shift, and go to state 3


State 2

    2 start: $@1 . slst

    INC     shift, and go to state 4
    DEC     shift, and go to state 5
    ID      shift, and go to state 6
    IF      shift, and go to state 7
    STRUCT  shift, and go to state 8
    INT     shift, and go to state 9
    FLOAT   shift, and go to state 10
    CHAR    shift, and go to state 11

    $default  reduce using rule 9 (DUMMY)

    slst       go to state 12
    E          go to state 13
    DUMMY      go to state 14
    STMT       go to state 15
    VAR_DEC    go to state 16
    TYPE       go to state 17
    B          go to state 18
    STRUCTDEC  go to state 19
    PRE        go to state 20


State 3

    0 $accept: start $end .

    $default  accept


State 4

   61 PRE: INC . ID

    ID  shift, and go to state 21


State 5

   63 PRE: DEC . ID

    ID  shift, and go to state 22


State 6

   25 STMT: ID . ASSIGN AFTER ';'
   62 PRE: ID . INC
   64    | ID . DEC

    AEQ  shift, and go to state 23
    INC  shift, and go to state 24
    DEC  shift, and go to state 25

    ASSIGN  go to state 26


State 7

   24 STMT: IF . '(' COND $@4 ')' CRLOP BODY CRLCL $@5 ELSE CRLOP $@6 BODY CRLCL

    '('  shift, and go to state 27


State 8

   41 STRUCTDEC: STRUCT . CRLOP $@8 INSSTR CRLCL OPTID

    CRLOP  shift, and go to state 28


State 9

   31 B: INT .

    $default  reduce using rule 31 (B)


State 10

   32 B: FLOAT .

    $default  reduce using rule 32 (B)


State 11

   33 B: CHAR .

    $default  reduce using rule 33 (B)


State 12

    2 start: $@1 slst .

    $default  reduce using rule 2 (start)


State 13

    3 slst: E . slst
    4     | E .

    INC     shift, and go to state 4
    DEC     shift, and go to state 5
    ID      shift, and go to state 6
    IF      shift, and go to state 7
    STRUCT  shift, and go to state 8
    INT     shift, and go to state 9
    FLOAT   shift, and go to state 10
    CHAR    shift, and go to state 11

    WHILE     reduce using rule 9 (DUMMY)
    CRLOP     reduce using rule 9 (DUMMY)
    $default  reduce using rule 4 (slst)

    slst       go to state 29
    E          go to state 13
    DUMMY      go to state 14
    STMT       go to state 15
    VAR_DEC    go to state 16
    TYPE       go to state 17
    B          go to state 18
    STRUCTDEC  go to state 19
    PRE        go to state 20


State 14

    8 E: DUMMY . CONTROL

    WHILE  shift, and go to state 30
    CRLOP  shift, and go to state 31

    CONTROL  go to state 32
    E1       go to state 33
    E2       go to state 34


State 15

    7 E: STMT .

    $default  reduce using rule 7 (E)


State 16

   19 STMT: VAR_DEC . ';'

    ';'  shift, and go to state 35


State 17

   27 VAR_DEC: TYPE . NEXT
   28        | TYPE . NEXT ASSIGN ANY

    ID  shift, and go to state 36

    NEXT  go to state 37
    ARRM  go to state 38


State 18

   29 TYPE: B .
   30     | B . PTRDEC

    POINTER  shift, and go to state 39

    $default  reduce using rule 29 (TYPE)

    PTRDEC  go to state 40


State 19

   20 STMT: STRUCTDEC . ';'

    ';'  shift, and go to state 41


State 20

   26 STMT: PRE . ';'

    ';'  shift, and go to state 42


State 21

   61 PRE: INC ID .

    $default  reduce using rule 61 (PRE)


State 22

   63 PRE: DEC ID .

    $default  reduce using rule 63 (PRE)


State 23

   77 ASSIGN: AEQ .

    $default  reduce using rule 77 (ASSIGN)


State 24

   62 PRE: ID INC .

    $default  reduce using rule 62 (PRE)


State 25

   64 PRE: ID DEC .

    $default  reduce using rule 64 (PRE)


State 26

   25 STMT: ID ASSIGN . AFTER ';'

    TRUE   shift, and go to state 43
    FALSE  shift, and go to state 44
    INC    shift, and go to state 4
    DEC    shift, and go to state 5
    NUM    shift, and go to state 45
    ID     shift, and go to state 46

    AFTER  go to state 47
    LATER  go to state 48
    PRE    go to state 49
    ANY    go to state 50


State 27

   24 STMT: IF '(' . COND $@4 ')' CRLOP BODY CRLCL $@5 ELSE CRLOP $@6 BODY CRLCL

    TRUE   shift, and go to state 43
    FALSE  shift, and go to state 44
    NUM    shift, and go to state 45
    ID     shift, and go to state 51

    COND  go to state 52
    ANY   go to state 53


State 28

   41 STRUCTDEC: STRUCT CRLOP . $@8 INSSTR CRLCL OPTID

    $default  reduce using rule 40 ($@8)

    $@8  go to state 54


State 29

    3 slst: E slst .

    $default  reduce using rule 3 (slst)


State 30

   13 E1: WHILE . '(' COND ')' CRLOP $@2 BODY CRLCL

    '('  shift, and go to state 55


State 31

   15 E2: CRLOP . $@3 BODY CRLCL

    $default  reduce using rule 14 ($@3)

    $@3  go to state 56


State 32

    8 E: DUMMY CONTROL .

    $default  reduce using rule 8 (E)


State 33

   10 CONTROL: E1 .

    $default  reduce using rule 10 (CONTROL)


State 34

   11 CONTROL: E2 .

    $default  reduce using rule 11 (CONTROL)


State 35

   19 STMT: VAR_DEC ';' .

    $default  reduce using rule 19 (STMT)


State 36

   34 NEXT: ID .
   37 ARRM: ID . $@7 C

    ARROP     reduce using rule 36 ($@7)
    $default  reduce using rule 34 (NEXT)

    $@7  go to state 57


State 37

   27 VAR_DEC: TYPE NEXT .
   28        | TYPE NEXT . ASSIGN ANY

    AEQ  shift, and go to state 23

    $default  reduce using rule 27 (VAR_DEC)

    ASSIGN  go to state 58


State 38

   35 NEXT: ARRM .

    $default  reduce using rule 35 (NEXT)


State 39

   38 PTRDEC: POINTER . PTRDEC
   39       | POINTER .

    POINTER  shift, and go to state 39

    $default  reduce using rule 39 (PTRDEC)

    PTRDEC  go to state 59


State 40

   30 TYPE: B PTRDEC .

    $default  reduce using rule 30 (TYPE)


State 41

   20 STMT: STRUCTDEC ';' .

    $default  reduce using rule 20 (STMT)


State 42

   26 STMT: PRE ';' .

    $default  reduce using rule 26 (STMT)


State 43

   67 ANY: TRUE .

    $default  reduce using rule 67 (ANY)


State 44

   68 ANY: FALSE .

    $default  reduce using rule 68 (ANY)


State 45

   65 ANY: NUM .

    $default  reduce using rule 65 (ANY)


State 46

   62 PRE: ID . INC
   64    | ID . DEC
   66 ANY: ID .

    INC  shift, and go to state 24
    DEC  shift, and go to state 25

    $default  reduce using rule 66 (ANY)


State 47

   25 STMT: ID ASSIGN AFTER . ';'
   51 AFTER: AFTER . '+' AFTER
   52      | AFTER . '-' AFTER
   53      | AFTER . XOR AFTER
   54      | AFTER . BAND AFTER
   55      | AFTER . BOR AFTER

    XOR   shift, and go to state 60
    BOR   shift, and go to state 61
    BAND  shift, and go to state 62
    '+'   shift, and go to state 63
    '-'   shift, and go to state 64
    ';'   shift, and go to state 65


State 48

   57 AFTER: LATER .
   58 LATER: LATER . POINTER LATER
   59      | LATER . '/' LATER

    POINTER  shift, and go to state 66
    '/'      shift, and go to state 67

    $default  reduce using rule 57 (AFTER)


State 49

   56 AFTER: PRE .

    $default  reduce using rule 56 (AFTER)


State 50

   60 LATER: ANY .

    $default  reduce using rule 60 (LATER)


State 51

   17 COND: ID . ASSIGN AFTER
   66 ANY: ID .

    AEQ  shift, and go to state 23

    $default  reduce using rule 66 (ANY)

    ASSIGN  go to state 68


State 52

   24 STMT: IF '(' COND . $@4 ')' CRLOP BODY CRLCL $@5 ELSE CRLOP $@6 BODY CRLCL

    $default  reduce using rule 21 ($@4)

    $@4  go to state 69


State 53

   16 COND: ANY . CMP AFTER
   18     | ANY .

    EQ    shift, and go to state 70
    NEQ   shift, and go to state 71
    LOR   shift, and go to state 72
    LAND  shift, and go to state 73
    LTEQ  shift, and go to state 74
    GTEQ  shift, and go to state 75
    LT    shift, and go to state 76
    GT    shift, and go to state 77

    $default  reduce using rule 18 (COND)

    CMP  go to state 78


State 54

   41 STRUCTDEC: STRUCT CRLOP $@8 . INSSTR CRLCL OPTID

    INT    shift, and go to state 9
    FLOAT  shift, and go to state 10
    CHAR   shift, and go to state 11

    $default  reduce using rule 46 (INSSTR)

    TYPE    go to state 79
    B       go to state 18
    INSSTR  go to state 80


State 55

   13 E1: WHILE '(' . COND ')' CRLOP $@2 BODY CRLCL

    TRUE   shift, and go to state 43
    FALSE  shift, and go to state 44
    NUM    shift, and go to state 45
    ID     shift, and go to state 51

    COND  go to state 81
    ANY   go to state 53


State 56

   15 E2: CRLOP $@3 . BODY CRLCL

    INC     shift, and go to state 4
    DEC     shift, and go to state 5
    ID      shift, and go to state 6
    IF      shift, and go to state 7
    STRUCT  shift, and go to state 8
    INT     shift, and go to state 9
    FLOAT   shift, and go to state 10
    CHAR    shift, and go to state 11

    CRLCL     reduce using rule 6 (BODY)
    $default  reduce using rule 9 (DUMMY)

    slst       go to state 82
    BODY       go to state 83
    E          go to state 13
    DUMMY      go to state 14
    STMT       go to state 15
    VAR_DEC    go to state 16
    TYPE       go to state 17
    B          go to state 18
    STRUCTDEC  go to state 19
    PRE        go to state 20


State 57

   37 ARRM: ID $@7 . C

    ARROP  shift, and go to state 84

    C  go to state 85


State 58

   28 VAR_DEC: TYPE NEXT ASSIGN . ANY

    TRUE   shift, and go to state 43
    FALSE  shift, and go to state 44
    NUM    shift, and go to state 45
    ID     shift, and go to state 86

    ANY  go to state 87


State 59

   38 PTRDEC: POINTER PTRDEC .

    $default  reduce using rule 38 (PTRDEC)


State 60

   53 AFTER: AFTER XOR . AFTER

    TRUE   shift, and go to state 43
    FALSE  shift, and go to state 44
    INC    shift, and go to state 4
    DEC    shift, and go to state 5
    NUM    shift, and go to state 45
    ID     shift, and go to state 46

    AFTER  go to state 88
    LATER  go to state 48
    PRE    go to state 49
    ANY    go to state 50


State 61

   55 AFTER: AFTER BOR . AFTER

    TRUE   shift, and go to state 43
    FALSE  shift, and go to state 44
    INC    shift, and go to state 4
    DEC    shift, and go to state 5
    NUM    shift, and go to state 45
    ID     shift, and go to state 46

    AFTER  go to state 89
    LATER  go to state 48
    PRE    go to state 49
    ANY    go to state 50


State 62

   54 AFTER: AFTER BAND . AFTER

    TRUE   shift, and go to state 43
    FALSE  shift, and go to state 44
    INC    shift, and go to state 4
    DEC    shift, and go to state 5
    NUM    shift, and go to state 45
    ID     shift, and go to state 46

    AFTER  go to state 90
    LATER  go to state 48
    PRE    go to state 49
    ANY    go to state 50


State 63

   51 AFTER: AFTER '+' . AFTER

    TRUE   shift, and go to state 43
    FALSE  shift, and go to state 44
    INC    shift, and go to state 4
    DEC    shift, and go to state 5
    NUM    shift, and go to state 45
    ID     shift, and go to state 46

    AFTER  go to state 91
    LATER  go to state 48
    PRE    go to state 49
    ANY    go to state 50


State 64

   52 AFTER: AFTER '-' . AFTER

    TRUE   shift, and go to state 43
    FALSE  shift, and go to state 44
    INC    shift, and go to state 4
    DEC    shift, and go to state 5
    NUM    shift, and go to state 45
    ID     shift, and go to state 46

    AFTER  go to state 92
    LATER  go to state 48
    PRE    go to state 49
    ANY    go to state 50


State 65

   25 STMT: ID ASSIGN AFTER ';' .

    $default  reduce using rule 25 (STMT)


State 66

   58 LATER: LATER POINTER . LATER

    TRUE   shift, and go to state 43
    FALSE  shift, and go to state 44
    NUM    shift, and go to state 45
    ID     shift, and go to state 86

    LATER  go to state 93
    ANY    go to state 50


State 67

   59 LATER: LATER '/' . LATER

    TRUE   shift, and go to state 43
    FALSE  shift, and go to state 44
    NUM    shift, and go to state 45
    ID     shift, and go to state 86

    LATER  go to state 94
    ANY    go to state 50


State 68

   17 COND: ID ASSIGN . AFTER

    TRUE   shift, and go to state 43
    FALSE  shift, and go to state 44
    INC    shift, and go to state 4
    DEC    shift, and go to state 5
    NUM    shift, and go to state 45
    ID     shift, and go to state 46

    AFTER  go to state 95
    LATER  go to state 48
    PRE    go to state 49
    ANY    go to state 50


State 69

   24 STMT: IF '(' COND $@4 . ')' CRLOP BODY CRLCL $@5 ELSE CRLOP $@6 BODY CRLCL

    ')'  shift, and go to state 96


State 70

   69 CMP: EQ .

    $default  reduce using rule 69 (CMP)


State 71

   70 CMP: NEQ .

    $default  reduce using rule 70 (CMP)


State 72

   71 CMP: LOR .

    $default  reduce using rule 71 (CMP)


State 73

   72 CMP: LAND .

    $default  reduce using rule 72 (CMP)


State 74

   73 CMP: LTEQ .

    $default  reduce using rule 73 (CMP)


State 75

   74 CMP: GTEQ .

    $default  reduce using rule 74 (CMP)


State 76

   75 CMP: LT .

    $default  reduce using rule 75 (CMP)


State 77

   76 CMP: GT .

    $default  reduce using rule 76 (CMP)


State 78

   16 COND: ANY CMP . AFTER

    TRUE   shift, and go to state 43
    FALSE  shift, and go to state 44
    INC    shift, and go to state 4
    DEC    shift, and go to state 5
    NUM    shift, and go to state 45
    ID     shift, and go to state 46

    AFTER  go to state 97
    LATER  go to state 48
    PRE    go to state 49
    ANY    go to state 50


State 79

   45 INSSTR: TYPE . NEXT $@9 ';' INSSTR

    ID  shift, and go to state 36

    NEXT  go to state 98
    ARRM  go to state 38


State 80

   41 STRUCTDEC: STRUCT CRLOP $@8 INSSTR . CRLCL OPTID

    CRLCL  shift, and go to state 99


State 81

   13 E1: WHILE '(' COND . ')' CRLOP $@2 BODY CRLCL

    ')'  shift, and go to state 100


State 82

    5 BODY: slst .

    $default  reduce using rule 5 (BODY)


State 83

   15 E2: CRLOP $@3 BODY . CRLCL

    CRLCL  shift, and go to state 101


State 84

   48 C: ARROP . NUM $@10 D

    NUM  shift, and go to state 102


State 85

   37 ARRM: ID $@7 C .

    $default  reduce using rule 37 (ARRM)


State 86

   66 ANY: ID .

    $default  reduce using rule 66 (ANY)


State 87

   28 VAR_DEC: TYPE NEXT ASSIGN ANY .

    $default  reduce using rule 28 (VAR_DEC)


State 88

   51 AFTER: AFTER . '+' AFTER
   52      | AFTER . '-' AFTER
   53      | AFTER . XOR AFTER
   53      | AFTER XOR AFTER .
   54      | AFTER . BAND AFTER
   55      | AFTER . BOR AFTER

    $default  reduce using rule 53 (AFTER)


State 89

   51 AFTER: AFTER . '+' AFTER
   52      | AFTER . '-' AFTER
   53      | AFTER . XOR AFTER
   54      | AFTER . BAND AFTER
   55      | AFTER . BOR AFTER
   55      | AFTER BOR AFTER .

    $default  reduce using rule 55 (AFTER)


State 90

   51 AFTER: AFTER . '+' AFTER
   52      | AFTER . '-' AFTER
   53      | AFTER . XOR AFTER
   54      | AFTER . BAND AFTER
   54      | AFTER BAND AFTER .
   55      | AFTER . BOR AFTER

    $default  reduce using rule 54 (AFTER)


State 91

   51 AFTER: AFTER . '+' AFTER
   51      | AFTER '+' AFTER .
   52      | AFTER . '-' AFTER
   53      | AFTER . XOR AFTER
   54      | AFTER . BAND AFTER
   55      | AFTER . BOR AFTER

    XOR   shift, and go to state 60
    BOR   shift, and go to state 61
    BAND  shift, and go to state 62

    $default  reduce using rule 51 (AFTER)


State 92

   51 AFTER: AFTER . '+' AFTER
   52      | AFTER . '-' AFTER
   52      | AFTER '-' AFTER .
   53      | AFTER . XOR AFTER
   54      | AFTER . BAND AFTER
   55      | AFTER . BOR AFTER

    XOR   shift, and go to state 60
    BOR   shift, and go to state 61
    BAND  shift, and go to state 62

    $default  reduce using rule 52 (AFTER)


State 93

   58 LATER: LATER . POINTER LATER
   58      | LATER POINTER LATER .
   59      | LATER . '/' LATER

    $default  reduce using rule 58 (LATER)


State 94

   58 LATER: LATER . POINTER LATER
   59      | LATER . '/' LATER
   59      | LATER '/' LATER .

    $default  reduce using rule 59 (LATER)


State 95

   17 COND: ID ASSIGN AFTER .
   51 AFTER: AFTER . '+' AFTER
   52      | AFTER . '-' AFTER
   53      | AFTER . XOR AFTER
   54      | AFTER . BAND AFTER
   55      | AFTER . BOR AFTER

    XOR   shift, and go to state 60
    BOR   shift, and go to state 61
    BAND  shift, and go to state 62
    '+'   shift, and go to state 63
    '-'   shift, and go to state 64

    $default  reduce using rule 17 (COND)


State 96

   24 STMT: IF '(' COND $@4 ')' . CRLOP BODY CRLCL $@5 ELSE CRLOP $@6 BODY CRLCL

    CRLOP  shift, and go to state 103


State 97

   16 COND: ANY CMP AFTER .
   51 AFTER: AFTER . '+' AFTER
   52      | AFTER . '-' AFTER
   53      | AFTER . XOR AFTER
   54      | AFTER . BAND AFTER
   55      | AFTER . BOR AFTER

    XOR   shift, and go to state 60
    BOR   shift, and go to state 61
    BAND  shift, and go to state 62
    '+'   shift, and go to state 63
    '-'   shift, and go to state 64

    $default  reduce using rule 16 (COND)


State 98

   45 INSSTR: TYPE NEXT . $@9 ';' INSSTR

    $default  reduce using rule 44 ($@9)

    $@9  go to state 104


State 99

   41 STRUCTDEC: STRUCT CRLOP $@8 INSSTR CRLCL . OPTID

    ID  shift, and go to state 105

    $default  reduce using rule 43 (OPTID)

    OPTID  go to state 106


State 100

   13 E1: WHILE '(' COND ')' . CRLOP $@2 BODY CRLCL

    CRLOP  shift, and go to state 107


State 101

   15 E2: CRLOP $@3 BODY CRLCL .

    $default  reduce using rule 15 (E2)


State 102

   48 C: ARROP NUM . $@10 D

    $default  reduce using rule 47 ($@10)

    $@10  go to state 108


State 103

   24 STMT: IF '(' COND $@4 ')' CRLOP . BODY CRLCL $@5 ELSE CRLOP $@6 BODY CRLCL

    INC     shift, and go to state 4
    DEC     shift, and go to state 5
    ID      shift, and go to state 6
    IF      shift, and go to state 7
    STRUCT  shift, and go to state 8
    INT     shift, and go to state 9
    FLOAT   shift, and go to state 10
    CHAR    shift, and go to state 11

    CRLCL     reduce using rule 6 (BODY)
    $default  reduce using rule 9 (DUMMY)

    slst       go to state 82
    BODY       go to state 109
    E          go to state 13
    DUMMY      go to state 14
    STMT       go to state 15
    VAR_DEC    go to state 16
    TYPE       go to state 17
    B          go to state 18
    STRUCTDEC  go to state 19
    PRE        go to state 20


State 104

   45 INSSTR: TYPE NEXT $@9 . ';' INSSTR

    ';'  shift, and go to state 110


State 105

   42 OPTID: ID .

    $default  reduce using rule 42 (OPTID)


State 106

   41 STRUCTDEC: STRUCT CRLOP $@8 INSSTR CRLCL OPTID .

    $default  reduce using rule 41 (STRUCTDEC)


State 107

   13 E1: WHILE '(' COND ')' CRLOP . $@2 BODY CRLCL

    $default  reduce using rule 12 ($@2)

    $@2  go to state 111


State 108

   48 C: ARROP NUM $@10 . D

    ARRCL  shift, and go to state 112

    D  go to state 113


State 109

   24 STMT: IF '(' COND $@4 ')' CRLOP BODY . CRLCL $@5 ELSE CRLOP $@6 BODY CRLCL

    CRLCL  shift, and go to state 114


State 110

   45 INSSTR: TYPE NEXT $@9 ';' . INSSTR

    INT    shift, and go to state 9
    FLOAT  shift, and go to state 10
    CHAR   shift, and go to state 11

    $default  reduce using rule 46 (INSSTR)

    TYPE    go to state 79
    B       go to state 18
    INSSTR  go to state 115


State 111

   13 E1: WHILE '(' COND ')' CRLOP $@2 . BODY CRLCL

    INC     shift, and go to state 4
    DEC     shift, and go to state 5
    ID      shift, and go to state 6
    IF      shift, and go to state 7
    STRUCT  shift, and go to state 8
    INT     shift, and go to state 9
    FLOAT   shift, and go to state 10
    CHAR    shift, and go to state 11

    CRLCL     reduce using rule 6 (BODY)
    $default  reduce using rule 9 (DUMMY)

    slst       go to state 82
    BODY       go to state 116
    E          go to state 13
    DUMMY      go to state 14
    STMT       go to state 15
    VAR_DEC    go to state 16
    TYPE       go to state 17
    B          go to state 18
    STRUCTDEC  go to state 19
    PRE        go to state 20


State 112

   49 D: ARRCL .
   50  | ARRCL . C

    ARROP  shift, and go to state 84

    $default  reduce using rule 49 (D)

    C  go to state 117


State 113

   48 C: ARROP NUM $@10 D .

    $default  reduce using rule 48 (C)


State 114

   24 STMT: IF '(' COND $@4 ')' CRLOP BODY CRLCL . $@5 ELSE CRLOP $@6 BODY CRLCL

    $default  reduce using rule 22 ($@5)

    $@5  go to state 118


State 115

   45 INSSTR: TYPE NEXT $@9 ';' INSSTR .

    $default  reduce using rule 45 (INSSTR)


State 116

   13 E1: WHILE '(' COND ')' CRLOP $@2 BODY . CRLCL

    CRLCL  shift, and go to state 119


State 117

   50 D: ARRCL C .

    $default  reduce using rule 50 (D)


State 118

   24 STMT: IF '(' COND $@4 ')' CRLOP BODY CRLCL $@5 . ELSE CRLOP $@6 BODY CRLCL

    ELSE  shift, and go to state 120


State 119

   13 E1: WHILE '(' COND ')' CRLOP $@2 BODY CRLCL .

    $default  reduce using rule 13 (E1)


State 120

   24 STMT: IF '(' COND $@4 ')' CRLOP BODY CRLCL $@5 ELSE . CRLOP $@6 BODY CRLCL

    CRLOP  shift, and go to state 121


State 121

   24 STMT: IF '(' COND $@4 ')' CRLOP BODY CRLCL $@5 ELSE CRLOP . $@6 BODY CRLCL

    $default  reduce using rule 23 ($@6)

    $@6  go to state 122


State 122

   24 STMT: IF '(' COND $@4 ')' CRLOP BODY CRLCL $@5 ELSE CRLOP $@6 . BODY CRLCL

    INC     shift, and go to state 4
    DEC     shift, and go to state 5
    ID      shift, and go to state 6
    IF      shift, and go to state 7
    STRUCT  shift, and go to state 8
    INT     shift, and go to state 9
    FLOAT   shift, and go to state 10
    CHAR    shift, and go to state 11

    CRLCL     reduce using rule 6 (BODY)
    $default  reduce using rule 9 (DUMMY)

    slst       go to state 82
    BODY       go to state 123
    E          go to state 13
    DUMMY      go to state 14
    STMT       go to state 15
    VAR_DEC    go to state 16
    TYPE       go to state 17
    B          go to state 18
    STRUCTDEC  go to state 19
    PRE        go to state 20


State 123

   24 STMT: IF '(' COND $@4 ')' CRLOP BODY CRLCL $@5 ELSE CRLOP $@6 BODY . CRLCL

    CRLCL  shift, and go to state 124


State 124

   24 STMT: IF '(' COND $@4 ')' CRLOP BODY CRLCL $@5 ELSE CRLOP $@6 BODY CRLCL .

    $default  reduce using rule 24 (STMT)
