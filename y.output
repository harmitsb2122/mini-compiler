Terminals unused in grammar

    UMINUS
    '!'


Grammar

    0 $accept: start $end

    1 $@1: %empty

    2 start: $@1 slst

    3 slst: E slst
    4     | E

    5 BODY: slst
    6     | %empty

    7 E: STMT
    8  | DUMMY CONTROL

    9 DUMMY: %empty

   10 CONTROL: E1
   11        | E2

   12 $@2: %empty

   13 E1: WHILE ROP COND RCL CRLOP $@2 BODY CRLCL

   14 $@3: %empty

   15 E2: CRLOP $@3 BODY CRLCL

   16 COND: COND0
   17     | ANY

   18 COND0: COND0 LOR COND0
   19      | COND0 LAND COND0
   20      | LNOT COND0
   21      | COND1

   22 COND1: COND1 LT COND1
   23      | COND1 GT COND1
   24      | COND1 LTEQ COND1
   25      | COND1 GTEQ COND1
   26      | COND2

   27 COND2: AFTER CMP AFTER
   28      | AFTER ASSIGN AFTER
   29      | LNOT AFTER
   30      | LNOT ROP AFTER RCL

   31 STMT: VAR_DEC ';'
   32     | STRUCTDEC ';'

   33 $@4: %empty

   34 $@5: %empty

   35 $@6: %empty

   36 STMT: IF ROP COND $@4 RCL CRLOP BODY CRLCL $@5 ELSE CRLOP $@6 BODY CRLCL
   37     | ID ASSIGN AFTER ';'
   38     | PRE ';'

   39 $@7: %empty

   40 VAR_DEC: TYPE $@7 REP

   41 REP: REP ',' NEXT
   42    | REP ',' NEXT ASSIGN ANY
   43    | NEXT
   44    | NEXT ASSIGN ANY

   45 TYPE: B
   46     | B PTRDEC

   47 B: INT
   48  | FLOAT
   49  | CHAR
   50  | LONG

   51 NEXT: ID
   52     | ARRM

   53 $@8: %empty

   54 ARRM: ID $@8 C

   55 PTRDEC: POINTER PTRDEC
   56       | POINTER

   57 $@9: %empty

   58 STRUCTDEC: STRUCT CRLOP $@9 INSSTR CRLCL OPTID

   59 OPTID: ID
   60      | %empty

   61 $@10: %empty

   62 INSSTR: TYPE NEXT $@10 ';' INSSTR
   63       | %empty

   64 $@11: %empty

   65 C: ARROP NUM $@11 D

   66 D: ARRCL
   67  | ARRCL C

   68 AFTER: AFTER '+' AFTER
   69      | AFTER '-' AFTER
   70      | AFTER XOR AFTER
   71      | AFTER BAND AFTER
   72      | AFTER BOR AFTER
   73      | PRE
   74      | LATER

   75 LATER: LATER POINTER LATER
   76      | LATER '/' LATER
   77      | ANY

   78 PRE: INC ID
   79    | ID INC
   80    | DEC ID
   81    | ID DEC

   82 ANY: NUM
   83    | ID
   84    | OPTYPE ID
   85    | TRUE
   86    | FALSE

   87 OPTYPE: ROP TYPE RCL

   88 CMP: EQ
   89    | NEQ
   90    | LOR
   91    | LAND
   92    | LTEQ
   93    | GTEQ
   94    | LT
   95    | GT

   96 ASSIGN: AEQ


Terminals, with rules where they appear

    $end (0) 0
    '!' (33)
    '+' (43) 68
    ',' (44) 41 42
    '-' (45) 69
    '/' (47) 76
    ';' (59) 31 32 37 38 62
    error (256)
    WHILE <string> (258) 13
    TRUE <string> (259) 85
    FALSE <string> (260) 86
    EQ <string> (261) 88
    NEQ <string> (262) 89
    LOR <string> (263) 18 90
    LAND <string> (264) 19 91
    LNOT <string> (265) 20 29 30
    LTEQ <string> (266) 24 92
    GTEQ <string> (267) 25 93
    LT <string> (268) 22 94
    GT <string> (269) 23 95
    XOR <string> (270) 70
    BOR <string> (271) 72
    BAND <string> (272) 71
    AEQ <string> (273) 96
    INC <string> (274) 78 79
    DEC <string> (275) 80 81
    NUM <string> (276) 65 82
    ID <string> (277) 37 51 54 59 78 79 80 81 83 84
    IF <string> (278) 36
    ELSE <string> (279) 36
    STRUCT <string> (280) 58
    INT <string> (281) 47
    FLOAT <string> (282) 48
    LONG <string> (283) 50
    POINTER <string> (284) 55 56 75
    CHAR <string> (285) 49
    ARROP <string> (286) 65
    ARRCL <string> (287) 66 67
    CRLOP <string> (288) 13 15 36 58
    CRLCL <string> (289) 13 15 36 58
    ROP <string> (290) 13 30 36 87
    RCL <string> (291) 13 30 36 87
    UMINUS (292)


Nonterminals, with rules where they appear

    $accept (44)
        on left: 0
    start (45)
        on left: 2
        on right: 0
    $@1 (46)
        on left: 1
        on right: 2
    slst (47)
        on left: 3 4
        on right: 2 3 5
    BODY (48)
        on left: 5 6
        on right: 13 15 36
    E <string> (49)
        on left: 7 8
        on right: 3 4
    DUMMY <string> (50)
        on left: 9
        on right: 8
    CONTROL (51)
        on left: 10 11
        on right: 8
    E1 (52)
        on left: 13
        on right: 10
    $@2 (53)
        on left: 12
        on right: 13
    E2 (54)
        on left: 15
        on right: 11
    $@3 (55)
        on left: 14
        on right: 15
    COND <string> (56)
        on left: 16 17
        on right: 13 36
    COND0 <string> (57)
        on left: 18 19 20 21
        on right: 16 18 19 20
    COND1 <string> (58)
        on left: 22 23 24 25 26
        on right: 21 22 23 24 25
    COND2 <string> (59)
        on left: 27 28 29 30
        on right: 26
    STMT <string> (60)
        on left: 31 32 36 37 38
        on right: 7
    $@4 (61)
        on left: 33
        on right: 36
    $@5 (62)
        on left: 34
        on right: 36
    $@6 (63)
        on left: 35
        on right: 36
    VAR_DEC <string> (64)
        on left: 40
        on right: 31
    $@7 (65)
        on left: 39
        on right: 40
    REP (66)
        on left: 41 42 43 44
        on right: 40 41 42
    TYPE <string> (67)
        on left: 45 46
        on right: 40 62 87
    B <string> (68)
        on left: 47 48 49 50
        on right: 45 46
    NEXT <string> (69)
        on left: 51 52
        on right: 41 42 43 44 62
    ARRM <string> (70)
        on left: 54
        on right: 52
    $@8 (71)
        on left: 53
        on right: 54
    PTRDEC (72)
        on left: 55 56
        on right: 46 55
    STRUCTDEC <string> (73)
        on left: 58
        on right: 32
    $@9 (74)
        on left: 57
        on right: 58
    OPTID <string> (75)
        on left: 59 60
        on right: 58
    INSSTR <string> (76)
        on left: 62 63
        on right: 58 62
    $@10 (77)
        on left: 61
        on right: 62
    C <string> (78)
        on left: 65
        on right: 54 67
    $@11 (79)
        on left: 64
        on right: 65
    D <string> (80)
        on left: 66 67
        on right: 65
    AFTER <string> (81)
        on left: 68 69 70 71 72 73 74
        on right: 27 28 29 30 37 68 69 70 71 72
    LATER <string> (82)
        on left: 75 76 77
        on right: 74 75 76
    PRE <string> (83)
        on left: 78 79 80 81
        on right: 38 73
    ANY <string> (84)
        on left: 82 83 84 85 86
        on right: 17 42 44 77
    OPTYPE <string> (85)
        on left: 87
        on right: 84
    CMP <string> (86)
        on left: 88 89 90 91 92 93 94 95
        on right: 27
    ASSIGN <string> (87)
        on left: 96
        on right: 28 37 42 44


State 0

    0 $accept: . start $end

    $default  reduce using rule 1 ($@1)

    start  go to state 1
    $@1    go to state 2


State 1

    0 $accept: start . $end

    $end  shift, and go to state 3


State 2

    2 start: $@1 . slst

    INC     shift, and go to state 4
    DEC     shift, and go to state 5
    ID      shift, and go to state 6
    IF      shift, and go to state 7
    STRUCT  shift, and go to state 8
    INT     shift, and go to state 9
    FLOAT   shift, and go to state 10
    LONG    shift, and go to state 11
    CHAR    shift, and go to state 12

    $default  reduce using rule 9 (DUMMY)

    slst       go to state 13
    E          go to state 14
    DUMMY      go to state 15
    STMT       go to state 16
    VAR_DEC    go to state 17
    TYPE       go to state 18
    B          go to state 19
    STRUCTDEC  go to state 20
    PRE        go to state 21


State 3

    0 $accept: start $end .

    $default  accept


State 4

   78 PRE: INC . ID

    ID  shift, and go to state 22


State 5

   80 PRE: DEC . ID

    ID  shift, and go to state 23


State 6

   37 STMT: ID . ASSIGN AFTER ';'
   79 PRE: ID . INC
   81    | ID . DEC

    AEQ  shift, and go to state 24
    INC  shift, and go to state 25
    DEC  shift, and go to state 26

    ASSIGN  go to state 27


State 7

   36 STMT: IF . ROP COND $@4 RCL CRLOP BODY CRLCL $@5 ELSE CRLOP $@6 BODY CRLCL

    ROP  shift, and go to state 28


State 8

   58 STRUCTDEC: STRUCT . CRLOP $@9 INSSTR CRLCL OPTID

    CRLOP  shift, and go to state 29


State 9

   47 B: INT .

    $default  reduce using rule 47 (B)


State 10

   48 B: FLOAT .

    $default  reduce using rule 48 (B)


State 11

   50 B: LONG .

    $default  reduce using rule 50 (B)


State 12

   49 B: CHAR .

    $default  reduce using rule 49 (B)


State 13

    2 start: $@1 slst .

    $default  reduce using rule 2 (start)


State 14

    3 slst: E . slst
    4     | E .

    INC     shift, and go to state 4
    DEC     shift, and go to state 5
    ID      shift, and go to state 6
    IF      shift, and go to state 7
    STRUCT  shift, and go to state 8
    INT     shift, and go to state 9
    FLOAT   shift, and go to state 10
    LONG    shift, and go to state 11
    CHAR    shift, and go to state 12

    WHILE     reduce using rule 9 (DUMMY)
    CRLOP     reduce using rule 9 (DUMMY)
    $default  reduce using rule 4 (slst)

    slst       go to state 30
    E          go to state 14
    DUMMY      go to state 15
    STMT       go to state 16
    VAR_DEC    go to state 17
    TYPE       go to state 18
    B          go to state 19
    STRUCTDEC  go to state 20
    PRE        go to state 21


State 15

    8 E: DUMMY . CONTROL

    WHILE  shift, and go to state 31
    CRLOP  shift, and go to state 32

    CONTROL  go to state 33
    E1       go to state 34
    E2       go to state 35


State 16

    7 E: STMT .

    $default  reduce using rule 7 (E)


State 17

   31 STMT: VAR_DEC . ';'

    ';'  shift, and go to state 36


State 18

   40 VAR_DEC: TYPE . $@7 REP

    $default  reduce using rule 39 ($@7)

    $@7  go to state 37


State 19

   45 TYPE: B .
   46     | B . PTRDEC

    POINTER  shift, and go to state 38

    $default  reduce using rule 45 (TYPE)

    PTRDEC  go to state 39


State 20

   32 STMT: STRUCTDEC . ';'

    ';'  shift, and go to state 40


State 21

   38 STMT: PRE . ';'

    ';'  shift, and go to state 41


State 22

   78 PRE: INC ID .

    $default  reduce using rule 78 (PRE)


State 23

   80 PRE: DEC ID .

    $default  reduce using rule 80 (PRE)


State 24

   96 ASSIGN: AEQ .

    $default  reduce using rule 96 (ASSIGN)


State 25

   79 PRE: ID INC .

    $default  reduce using rule 79 (PRE)


State 26

   81 PRE: ID DEC .

    $default  reduce using rule 81 (PRE)


State 27

   37 STMT: ID ASSIGN . AFTER ';'

    TRUE   shift, and go to state 42
    FALSE  shift, and go to state 43
    INC    shift, and go to state 4
    DEC    shift, and go to state 5
    NUM    shift, and go to state 44
    ID     shift, and go to state 45
    ROP    shift, and go to state 46

    AFTER   go to state 47
    LATER   go to state 48
    PRE     go to state 49
    ANY     go to state 50
    OPTYPE  go to state 51


State 28

   36 STMT: IF ROP . COND $@4 RCL CRLOP BODY CRLCL $@5 ELSE CRLOP $@6 BODY CRLCL

    TRUE   shift, and go to state 42
    FALSE  shift, and go to state 43
    LNOT   shift, and go to state 52
    INC    shift, and go to state 4
    DEC    shift, and go to state 5
    NUM    shift, and go to state 44
    ID     shift, and go to state 45
    ROP    shift, and go to state 46

    COND    go to state 53
    COND0   go to state 54
    COND1   go to state 55
    COND2   go to state 56
    AFTER   go to state 57
    LATER   go to state 48
    PRE     go to state 49
    ANY     go to state 58
    OPTYPE  go to state 51


State 29

   58 STRUCTDEC: STRUCT CRLOP . $@9 INSSTR CRLCL OPTID

    $default  reduce using rule 57 ($@9)

    $@9  go to state 59


State 30

    3 slst: E slst .

    $default  reduce using rule 3 (slst)


State 31

   13 E1: WHILE . ROP COND RCL CRLOP $@2 BODY CRLCL

    ROP  shift, and go to state 60


State 32

   15 E2: CRLOP . $@3 BODY CRLCL

    $default  reduce using rule 14 ($@3)

    $@3  go to state 61


State 33

    8 E: DUMMY CONTROL .

    $default  reduce using rule 8 (E)


State 34

   10 CONTROL: E1 .

    $default  reduce using rule 10 (CONTROL)


State 35

   11 CONTROL: E2 .

    $default  reduce using rule 11 (CONTROL)


State 36

   31 STMT: VAR_DEC ';' .

    $default  reduce using rule 31 (STMT)


State 37

   40 VAR_DEC: TYPE $@7 . REP

    ID  shift, and go to state 62

    REP   go to state 63
    NEXT  go to state 64
    ARRM  go to state 65


State 38

   55 PTRDEC: POINTER . PTRDEC
   56       | POINTER .

    POINTER  shift, and go to state 38

    $default  reduce using rule 56 (PTRDEC)

    PTRDEC  go to state 66


State 39

   46 TYPE: B PTRDEC .

    $default  reduce using rule 46 (TYPE)


State 40

   32 STMT: STRUCTDEC ';' .

    $default  reduce using rule 32 (STMT)


State 41

   38 STMT: PRE ';' .

    $default  reduce using rule 38 (STMT)


State 42

   85 ANY: TRUE .

    $default  reduce using rule 85 (ANY)


State 43

   86 ANY: FALSE .

    $default  reduce using rule 86 (ANY)


State 44

   82 ANY: NUM .

    $default  reduce using rule 82 (ANY)


State 45

   79 PRE: ID . INC
   81    | ID . DEC
   83 ANY: ID .

    INC  shift, and go to state 25
    DEC  shift, and go to state 26

    $default  reduce using rule 83 (ANY)


State 46

   87 OPTYPE: ROP . TYPE RCL

    INT    shift, and go to state 9
    FLOAT  shift, and go to state 10
    LONG   shift, and go to state 11
    CHAR   shift, and go to state 12

    TYPE  go to state 67
    B     go to state 19


State 47

   37 STMT: ID ASSIGN AFTER . ';'
   68 AFTER: AFTER . '+' AFTER
   69      | AFTER . '-' AFTER
   70      | AFTER . XOR AFTER
   71      | AFTER . BAND AFTER
   72      | AFTER . BOR AFTER

    XOR   shift, and go to state 68
    BOR   shift, and go to state 69
    BAND  shift, and go to state 70
    '+'   shift, and go to state 71
    '-'   shift, and go to state 72
    ';'   shift, and go to state 73


State 48

   74 AFTER: LATER .
   75 LATER: LATER . POINTER LATER
   76      | LATER . '/' LATER

    POINTER  shift, and go to state 74
    '/'      shift, and go to state 75

    $default  reduce using rule 74 (AFTER)


State 49

   73 AFTER: PRE .

    $default  reduce using rule 73 (AFTER)


State 50

   77 LATER: ANY .

    $default  reduce using rule 77 (LATER)


State 51

   84 ANY: OPTYPE . ID

    ID  shift, and go to state 76


State 52

   20 COND0: LNOT . COND0
   29 COND2: LNOT . AFTER
   30      | LNOT . ROP AFTER RCL

    TRUE   shift, and go to state 42
    FALSE  shift, and go to state 43
    LNOT   shift, and go to state 52
    INC    shift, and go to state 4
    DEC    shift, and go to state 5
    NUM    shift, and go to state 44
    ID     shift, and go to state 45
    ROP    shift, and go to state 77

    COND0   go to state 78
    COND1   go to state 55
    COND2   go to state 56
    AFTER   go to state 79
    LATER   go to state 48
    PRE     go to state 49
    ANY     go to state 50
    OPTYPE  go to state 51


State 53

   36 STMT: IF ROP COND . $@4 RCL CRLOP BODY CRLCL $@5 ELSE CRLOP $@6 BODY CRLCL

    $default  reduce using rule 33 ($@4)

    $@4  go to state 80


State 54

   16 COND: COND0 .
   18 COND0: COND0 . LOR COND0
   19      | COND0 . LAND COND0

    LOR   shift, and go to state 81
    LAND  shift, and go to state 82

    $default  reduce using rule 16 (COND)


State 55

   21 COND0: COND1 .
   22 COND1: COND1 . LT COND1
   23      | COND1 . GT COND1
   24      | COND1 . LTEQ COND1
   25      | COND1 . GTEQ COND1

    LTEQ  shift, and go to state 83
    GTEQ  shift, and go to state 84
    LT    shift, and go to state 85
    GT    shift, and go to state 86

    $default  reduce using rule 21 (COND0)


State 56

   26 COND1: COND2 .

    $default  reduce using rule 26 (COND1)


State 57

   27 COND2: AFTER . CMP AFTER
   28      | AFTER . ASSIGN AFTER
   68 AFTER: AFTER . '+' AFTER
   69      | AFTER . '-' AFTER
   70      | AFTER . XOR AFTER
   71      | AFTER . BAND AFTER
   72      | AFTER . BOR AFTER

    EQ    shift, and go to state 87
    NEQ   shift, and go to state 88
    LOR   shift, and go to state 89
    LAND  shift, and go to state 90
    LTEQ  shift, and go to state 91
    GTEQ  shift, and go to state 92
    LT    shift, and go to state 93
    GT    shift, and go to state 94
    XOR   shift, and go to state 68
    BOR   shift, and go to state 69
    BAND  shift, and go to state 70
    AEQ   shift, and go to state 24
    '+'   shift, and go to state 71
    '-'   shift, and go to state 72

    CMP     go to state 95
    ASSIGN  go to state 96


State 58

   17 COND: ANY .
   77 LATER: ANY .

    RCL       reduce using rule 17 (COND)
    $default  reduce using rule 77 (LATER)


State 59

   58 STRUCTDEC: STRUCT CRLOP $@9 . INSSTR CRLCL OPTID

    INT    shift, and go to state 9
    FLOAT  shift, and go to state 10
    LONG   shift, and go to state 11
    CHAR   shift, and go to state 12

    $default  reduce using rule 63 (INSSTR)

    TYPE    go to state 97
    B       go to state 19
    INSSTR  go to state 98


State 60

   13 E1: WHILE ROP . COND RCL CRLOP $@2 BODY CRLCL

    TRUE   shift, and go to state 42
    FALSE  shift, and go to state 43
    LNOT   shift, and go to state 52
    INC    shift, and go to state 4
    DEC    shift, and go to state 5
    NUM    shift, and go to state 44
    ID     shift, and go to state 45
    ROP    shift, and go to state 46

    COND    go to state 99
    COND0   go to state 54
    COND1   go to state 55
    COND2   go to state 56
    AFTER   go to state 57
    LATER   go to state 48
    PRE     go to state 49
    ANY     go to state 58
    OPTYPE  go to state 51


State 61

   15 E2: CRLOP $@3 . BODY CRLCL

    INC     shift, and go to state 4
    DEC     shift, and go to state 5
    ID      shift, and go to state 6
    IF      shift, and go to state 7
    STRUCT  shift, and go to state 8
    INT     shift, and go to state 9
    FLOAT   shift, and go to state 10
    LONG    shift, and go to state 11
    CHAR    shift, and go to state 12

    CRLCL     reduce using rule 6 (BODY)
    $default  reduce using rule 9 (DUMMY)

    slst       go to state 100
    BODY       go to state 101
    E          go to state 14
    DUMMY      go to state 15
    STMT       go to state 16
    VAR_DEC    go to state 17
    TYPE       go to state 18
    B          go to state 19
    STRUCTDEC  go to state 20
    PRE        go to state 21


State 62

   51 NEXT: ID .
   54 ARRM: ID . $@8 C

    ARROP     reduce using rule 53 ($@8)
    $default  reduce using rule 51 (NEXT)

    $@8  go to state 102


State 63

   40 VAR_DEC: TYPE $@7 REP .
   41 REP: REP . ',' NEXT
   42    | REP . ',' NEXT ASSIGN ANY

    ','  shift, and go to state 103

    $default  reduce using rule 40 (VAR_DEC)


State 64

   43 REP: NEXT .
   44    | NEXT . ASSIGN ANY

    AEQ  shift, and go to state 24

    $default  reduce using rule 43 (REP)

    ASSIGN  go to state 104


State 65

   52 NEXT: ARRM .

    $default  reduce using rule 52 (NEXT)


State 66

   55 PTRDEC: POINTER PTRDEC .

    $default  reduce using rule 55 (PTRDEC)


State 67

   87 OPTYPE: ROP TYPE . RCL

    RCL  shift, and go to state 105


State 68

   70 AFTER: AFTER XOR . AFTER

    TRUE   shift, and go to state 42
    FALSE  shift, and go to state 43
    INC    shift, and go to state 4
    DEC    shift, and go to state 5
    NUM    shift, and go to state 44
    ID     shift, and go to state 45
    ROP    shift, and go to state 46

    AFTER   go to state 106
    LATER   go to state 48
    PRE     go to state 49
    ANY     go to state 50
    OPTYPE  go to state 51


State 69

   72 AFTER: AFTER BOR . AFTER

    TRUE   shift, and go to state 42
    FALSE  shift, and go to state 43
    INC    shift, and go to state 4
    DEC    shift, and go to state 5
    NUM    shift, and go to state 44
    ID     shift, and go to state 45
    ROP    shift, and go to state 46

    AFTER   go to state 107
    LATER   go to state 48
    PRE     go to state 49
    ANY     go to state 50
    OPTYPE  go to state 51


State 70

   71 AFTER: AFTER BAND . AFTER

    TRUE   shift, and go to state 42
    FALSE  shift, and go to state 43
    INC    shift, and go to state 4
    DEC    shift, and go to state 5
    NUM    shift, and go to state 44
    ID     shift, and go to state 45
    ROP    shift, and go to state 46

    AFTER   go to state 108
    LATER   go to state 48
    PRE     go to state 49
    ANY     go to state 50
    OPTYPE  go to state 51


State 71

   68 AFTER: AFTER '+' . AFTER

    TRUE   shift, and go to state 42
    FALSE  shift, and go to state 43
    INC    shift, and go to state 4
    DEC    shift, and go to state 5
    NUM    shift, and go to state 44
    ID     shift, and go to state 45
    ROP    shift, and go to state 46

    AFTER   go to state 109
    LATER   go to state 48
    PRE     go to state 49
    ANY     go to state 50
    OPTYPE  go to state 51


State 72

   69 AFTER: AFTER '-' . AFTER

    TRUE   shift, and go to state 42
    FALSE  shift, and go to state 43
    INC    shift, and go to state 4
    DEC    shift, and go to state 5
    NUM    shift, and go to state 44
    ID     shift, and go to state 45
    ROP    shift, and go to state 46

    AFTER   go to state 110
    LATER   go to state 48
    PRE     go to state 49
    ANY     go to state 50
    OPTYPE  go to state 51


State 73

   37 STMT: ID ASSIGN AFTER ';' .

    $default  reduce using rule 37 (STMT)


State 74

   75 LATER: LATER POINTER . LATER

    TRUE   shift, and go to state 42
    FALSE  shift, and go to state 43
    NUM    shift, and go to state 44
    ID     shift, and go to state 111
    ROP    shift, and go to state 46

    LATER   go to state 112
    ANY     go to state 50
    OPTYPE  go to state 51


State 75

   76 LATER: LATER '/' . LATER

    TRUE   shift, and go to state 42
    FALSE  shift, and go to state 43
    NUM    shift, and go to state 44
    ID     shift, and go to state 111
    ROP    shift, and go to state 46

    LATER   go to state 113
    ANY     go to state 50
    OPTYPE  go to state 51


State 76

   84 ANY: OPTYPE ID .

    $default  reduce using rule 84 (ANY)


State 77

   30 COND2: LNOT ROP . AFTER RCL
   87 OPTYPE: ROP . TYPE RCL

    TRUE   shift, and go to state 42
    FALSE  shift, and go to state 43
    INC    shift, and go to state 4
    DEC    shift, and go to state 5
    NUM    shift, and go to state 44
    ID     shift, and go to state 45
    INT    shift, and go to state 9
    FLOAT  shift, and go to state 10
    LONG   shift, and go to state 11
    CHAR   shift, and go to state 12
    ROP    shift, and go to state 46

    TYPE    go to state 67
    B       go to state 19
    AFTER   go to state 114
    LATER   go to state 48
    PRE     go to state 49
    ANY     go to state 50
    OPTYPE  go to state 51


State 78

   18 COND0: COND0 . LOR COND0
   19      | COND0 . LAND COND0
   20      | LNOT COND0 .

    $default  reduce using rule 20 (COND0)


State 79

   27 COND2: AFTER . CMP AFTER
   28      | AFTER . ASSIGN AFTER
   29      | LNOT AFTER .
   68 AFTER: AFTER . '+' AFTER
   69      | AFTER . '-' AFTER
   70      | AFTER . XOR AFTER
   71      | AFTER . BAND AFTER
   72      | AFTER . BOR AFTER

    EQ    shift, and go to state 87
    NEQ   shift, and go to state 88
    XOR   shift, and go to state 68
    BOR   shift, and go to state 69
    BAND  shift, and go to state 70
    AEQ   shift, and go to state 24
    '+'   shift, and go to state 71
    '-'   shift, and go to state 72

    $default  reduce using rule 29 (COND2)

    CMP     go to state 95
    ASSIGN  go to state 96


State 80

   36 STMT: IF ROP COND $@4 . RCL CRLOP BODY CRLCL $@5 ELSE CRLOP $@6 BODY CRLCL

    RCL  shift, and go to state 115


State 81

   18 COND0: COND0 LOR . COND0

    TRUE   shift, and go to state 42
    FALSE  shift, and go to state 43
    LNOT   shift, and go to state 52
    INC    shift, and go to state 4
    DEC    shift, and go to state 5
    NUM    shift, and go to state 44
    ID     shift, and go to state 45
    ROP    shift, and go to state 46

    COND0   go to state 116
    COND1   go to state 55
    COND2   go to state 56
    AFTER   go to state 57
    LATER   go to state 48
    PRE     go to state 49
    ANY     go to state 50
    OPTYPE  go to state 51


State 82

   19 COND0: COND0 LAND . COND0

    TRUE   shift, and go to state 42
    FALSE  shift, and go to state 43
    LNOT   shift, and go to state 52
    INC    shift, and go to state 4
    DEC    shift, and go to state 5
    NUM    shift, and go to state 44
    ID     shift, and go to state 45
    ROP    shift, and go to state 46

    COND0   go to state 117
    COND1   go to state 55
    COND2   go to state 56
    AFTER   go to state 57
    LATER   go to state 48
    PRE     go to state 49
    ANY     go to state 50
    OPTYPE  go to state 51


State 83

   24 COND1: COND1 LTEQ . COND1

    TRUE   shift, and go to state 42
    FALSE  shift, and go to state 43
    LNOT   shift, and go to state 118
    INC    shift, and go to state 4
    DEC    shift, and go to state 5
    NUM    shift, and go to state 44
    ID     shift, and go to state 45
    ROP    shift, and go to state 46

    COND1   go to state 119
    COND2   go to state 56
    AFTER   go to state 57
    LATER   go to state 48
    PRE     go to state 49
    ANY     go to state 50
    OPTYPE  go to state 51


State 84

   25 COND1: COND1 GTEQ . COND1

    TRUE   shift, and go to state 42
    FALSE  shift, and go to state 43
    LNOT   shift, and go to state 118
    INC    shift, and go to state 4
    DEC    shift, and go to state 5
    NUM    shift, and go to state 44
    ID     shift, and go to state 45
    ROP    shift, and go to state 46

    COND1   go to state 120
    COND2   go to state 56
    AFTER   go to state 57
    LATER   go to state 48
    PRE     go to state 49
    ANY     go to state 50
    OPTYPE  go to state 51


State 85

   22 COND1: COND1 LT . COND1

    TRUE   shift, and go to state 42
    FALSE  shift, and go to state 43
    LNOT   shift, and go to state 118
    INC    shift, and go to state 4
    DEC    shift, and go to state 5
    NUM    shift, and go to state 44
    ID     shift, and go to state 45
    ROP    shift, and go to state 46

    COND1   go to state 121
    COND2   go to state 56
    AFTER   go to state 57
    LATER   go to state 48
    PRE     go to state 49
    ANY     go to state 50
    OPTYPE  go to state 51


State 86

   23 COND1: COND1 GT . COND1

    TRUE   shift, and go to state 42
    FALSE  shift, and go to state 43
    LNOT   shift, and go to state 118
    INC    shift, and go to state 4
    DEC    shift, and go to state 5
    NUM    shift, and go to state 44
    ID     shift, and go to state 45
    ROP    shift, and go to state 46

    COND1   go to state 122
    COND2   go to state 56
    AFTER   go to state 57
    LATER   go to state 48
    PRE     go to state 49
    ANY     go to state 50
    OPTYPE  go to state 51


State 87

   88 CMP: EQ .

    $default  reduce using rule 88 (CMP)


State 88

   89 CMP: NEQ .

    $default  reduce using rule 89 (CMP)


State 89

   90 CMP: LOR .

    $default  reduce using rule 90 (CMP)


State 90

   91 CMP: LAND .

    $default  reduce using rule 91 (CMP)


State 91

   92 CMP: LTEQ .

    $default  reduce using rule 92 (CMP)


State 92

   93 CMP: GTEQ .

    $default  reduce using rule 93 (CMP)


State 93

   94 CMP: LT .

    $default  reduce using rule 94 (CMP)


State 94

   95 CMP: GT .

    $default  reduce using rule 95 (CMP)


State 95

   27 COND2: AFTER CMP . AFTER

    TRUE   shift, and go to state 42
    FALSE  shift, and go to state 43
    INC    shift, and go to state 4
    DEC    shift, and go to state 5
    NUM    shift, and go to state 44
    ID     shift, and go to state 45
    ROP    shift, and go to state 46

    AFTER   go to state 123
    LATER   go to state 48
    PRE     go to state 49
    ANY     go to state 50
    OPTYPE  go to state 51


State 96

   28 COND2: AFTER ASSIGN . AFTER

    TRUE   shift, and go to state 42
    FALSE  shift, and go to state 43
    INC    shift, and go to state 4
    DEC    shift, and go to state 5
    NUM    shift, and go to state 44
    ID     shift, and go to state 45
    ROP    shift, and go to state 46

    AFTER   go to state 124
    LATER   go to state 48
    PRE     go to state 49
    ANY     go to state 50
    OPTYPE  go to state 51


State 97

   62 INSSTR: TYPE . NEXT $@10 ';' INSSTR

    ID  shift, and go to state 62

    NEXT  go to state 125
    ARRM  go to state 65


State 98

   58 STRUCTDEC: STRUCT CRLOP $@9 INSSTR . CRLCL OPTID

    CRLCL  shift, and go to state 126


State 99

   13 E1: WHILE ROP COND . RCL CRLOP $@2 BODY CRLCL

    RCL  shift, and go to state 127


State 100

    5 BODY: slst .

    $default  reduce using rule 5 (BODY)


State 101

   15 E2: CRLOP $@3 BODY . CRLCL

    CRLCL  shift, and go to state 128


State 102

   54 ARRM: ID $@8 . C

    ARROP  shift, and go to state 129

    C  go to state 130


State 103

   41 REP: REP ',' . NEXT
   42    | REP ',' . NEXT ASSIGN ANY

    ID  shift, and go to state 62

    NEXT  go to state 131
    ARRM  go to state 65


State 104

   44 REP: NEXT ASSIGN . ANY

    TRUE   shift, and go to state 42
    FALSE  shift, and go to state 43
    NUM    shift, and go to state 44
    ID     shift, and go to state 111
    ROP    shift, and go to state 46

    ANY     go to state 132
    OPTYPE  go to state 51


State 105

   87 OPTYPE: ROP TYPE RCL .

    $default  reduce using rule 87 (OPTYPE)


State 106

   68 AFTER: AFTER . '+' AFTER
   69      | AFTER . '-' AFTER
   70      | AFTER . XOR AFTER
   70      | AFTER XOR AFTER .
   71      | AFTER . BAND AFTER
   72      | AFTER . BOR AFTER

    $default  reduce using rule 70 (AFTER)


State 107

   68 AFTER: AFTER . '+' AFTER
   69      | AFTER . '-' AFTER
   70      | AFTER . XOR AFTER
   71      | AFTER . BAND AFTER
   72      | AFTER . BOR AFTER
   72      | AFTER BOR AFTER .

    $default  reduce using rule 72 (AFTER)


State 108

   68 AFTER: AFTER . '+' AFTER
   69      | AFTER . '-' AFTER
   70      | AFTER . XOR AFTER
   71      | AFTER . BAND AFTER
   71      | AFTER BAND AFTER .
   72      | AFTER . BOR AFTER

    $default  reduce using rule 71 (AFTER)


State 109

   68 AFTER: AFTER . '+' AFTER
   68      | AFTER '+' AFTER .
   69      | AFTER . '-' AFTER
   70      | AFTER . XOR AFTER
   71      | AFTER . BAND AFTER
   72      | AFTER . BOR AFTER

    XOR   shift, and go to state 68
    BOR   shift, and go to state 69
    BAND  shift, and go to state 70

    $default  reduce using rule 68 (AFTER)


State 110

   68 AFTER: AFTER . '+' AFTER
   69      | AFTER . '-' AFTER
   69      | AFTER '-' AFTER .
   70      | AFTER . XOR AFTER
   71      | AFTER . BAND AFTER
   72      | AFTER . BOR AFTER

    XOR   shift, and go to state 68
    BOR   shift, and go to state 69
    BAND  shift, and go to state 70

    $default  reduce using rule 69 (AFTER)


State 111

   83 ANY: ID .

    $default  reduce using rule 83 (ANY)


State 112

   75 LATER: LATER . POINTER LATER
   75      | LATER POINTER LATER .
   76      | LATER . '/' LATER

    $default  reduce using rule 75 (LATER)


State 113

   75 LATER: LATER . POINTER LATER
   76      | LATER . '/' LATER
   76      | LATER '/' LATER .

    $default  reduce using rule 76 (LATER)


State 114

   30 COND2: LNOT ROP AFTER . RCL
   68 AFTER: AFTER . '+' AFTER
   69      | AFTER . '-' AFTER
   70      | AFTER . XOR AFTER
   71      | AFTER . BAND AFTER
   72      | AFTER . BOR AFTER

    XOR   shift, and go to state 68
    BOR   shift, and go to state 69
    BAND  shift, and go to state 70
    RCL   shift, and go to state 133
    '+'   shift, and go to state 71
    '-'   shift, and go to state 72


State 115

   36 STMT: IF ROP COND $@4 RCL . CRLOP BODY CRLCL $@5 ELSE CRLOP $@6 BODY CRLCL

    CRLOP  shift, and go to state 134


State 116

   18 COND0: COND0 . LOR COND0
   18      | COND0 LOR COND0 .
   19      | COND0 . LAND COND0

    $default  reduce using rule 18 (COND0)


State 117

   18 COND0: COND0 . LOR COND0
   19      | COND0 . LAND COND0
   19      | COND0 LAND COND0 .

    $default  reduce using rule 19 (COND0)


State 118

   29 COND2: LNOT . AFTER
   30      | LNOT . ROP AFTER RCL

    TRUE   shift, and go to state 42
    FALSE  shift, and go to state 43
    INC    shift, and go to state 4
    DEC    shift, and go to state 5
    NUM    shift, and go to state 44
    ID     shift, and go to state 45
    ROP    shift, and go to state 77

    AFTER   go to state 135
    LATER   go to state 48
    PRE     go to state 49
    ANY     go to state 50
    OPTYPE  go to state 51


State 119

   22 COND1: COND1 . LT COND1
   23      | COND1 . GT COND1
   24      | COND1 . LTEQ COND1
   24      | COND1 LTEQ COND1 .
   25      | COND1 . GTEQ COND1

    $default  reduce using rule 24 (COND1)


State 120

   22 COND1: COND1 . LT COND1
   23      | COND1 . GT COND1
   24      | COND1 . LTEQ COND1
   25      | COND1 . GTEQ COND1
   25      | COND1 GTEQ COND1 .

    $default  reduce using rule 25 (COND1)


State 121

   22 COND1: COND1 . LT COND1
   22      | COND1 LT COND1 .
   23      | COND1 . GT COND1
   24      | COND1 . LTEQ COND1
   25      | COND1 . GTEQ COND1

    $default  reduce using rule 22 (COND1)


State 122

   22 COND1: COND1 . LT COND1
   23      | COND1 . GT COND1
   23      | COND1 GT COND1 .
   24      | COND1 . LTEQ COND1
   25      | COND1 . GTEQ COND1

    $default  reduce using rule 23 (COND1)


State 123

   27 COND2: AFTER CMP AFTER .
   68 AFTER: AFTER . '+' AFTER
   69      | AFTER . '-' AFTER
   70      | AFTER . XOR AFTER
   71      | AFTER . BAND AFTER
   72      | AFTER . BOR AFTER

    XOR   shift, and go to state 68
    BOR   shift, and go to state 69
    BAND  shift, and go to state 70
    '+'   shift, and go to state 71
    '-'   shift, and go to state 72

    $default  reduce using rule 27 (COND2)


State 124

   28 COND2: AFTER ASSIGN AFTER .
   68 AFTER: AFTER . '+' AFTER
   69      | AFTER . '-' AFTER
   70      | AFTER . XOR AFTER
   71      | AFTER . BAND AFTER
   72      | AFTER . BOR AFTER

    XOR   shift, and go to state 68
    BOR   shift, and go to state 69
    BAND  shift, and go to state 70
    '+'   shift, and go to state 71
    '-'   shift, and go to state 72

    $default  reduce using rule 28 (COND2)


State 125

   62 INSSTR: TYPE NEXT . $@10 ';' INSSTR

    $default  reduce using rule 61 ($@10)

    $@10  go to state 136


State 126

   58 STRUCTDEC: STRUCT CRLOP $@9 INSSTR CRLCL . OPTID

    ID  shift, and go to state 137

    $default  reduce using rule 60 (OPTID)

    OPTID  go to state 138


State 127

   13 E1: WHILE ROP COND RCL . CRLOP $@2 BODY CRLCL

    CRLOP  shift, and go to state 139


State 128

   15 E2: CRLOP $@3 BODY CRLCL .

    $default  reduce using rule 15 (E2)


State 129

   65 C: ARROP . NUM $@11 D

    NUM  shift, and go to state 140


State 130

   54 ARRM: ID $@8 C .

    $default  reduce using rule 54 (ARRM)


State 131

   41 REP: REP ',' NEXT .
   42    | REP ',' NEXT . ASSIGN ANY

    AEQ  shift, and go to state 24

    $default  reduce using rule 41 (REP)

    ASSIGN  go to state 141


State 132

   44 REP: NEXT ASSIGN ANY .

    $default  reduce using rule 44 (REP)


State 133

   30 COND2: LNOT ROP AFTER RCL .

    $default  reduce using rule 30 (COND2)


State 134

   36 STMT: IF ROP COND $@4 RCL CRLOP . BODY CRLCL $@5 ELSE CRLOP $@6 BODY CRLCL

    INC     shift, and go to state 4
    DEC     shift, and go to state 5
    ID      shift, and go to state 6
    IF      shift, and go to state 7
    STRUCT  shift, and go to state 8
    INT     shift, and go to state 9
    FLOAT   shift, and go to state 10
    LONG    shift, and go to state 11
    CHAR    shift, and go to state 12

    CRLCL     reduce using rule 6 (BODY)
    $default  reduce using rule 9 (DUMMY)

    slst       go to state 100
    BODY       go to state 142
    E          go to state 14
    DUMMY      go to state 15
    STMT       go to state 16
    VAR_DEC    go to state 17
    TYPE       go to state 18
    B          go to state 19
    STRUCTDEC  go to state 20
    PRE        go to state 21


State 135

   29 COND2: LNOT AFTER .
   68 AFTER: AFTER . '+' AFTER
   69      | AFTER . '-' AFTER
   70      | AFTER . XOR AFTER
   71      | AFTER . BAND AFTER
   72      | AFTER . BOR AFTER

    XOR   shift, and go to state 68
    BOR   shift, and go to state 69
    BAND  shift, and go to state 70
    '+'   shift, and go to state 71
    '-'   shift, and go to state 72

    $default  reduce using rule 29 (COND2)


State 136

   62 INSSTR: TYPE NEXT $@10 . ';' INSSTR

    ';'  shift, and go to state 143


State 137

   59 OPTID: ID .

    $default  reduce using rule 59 (OPTID)


State 138

   58 STRUCTDEC: STRUCT CRLOP $@9 INSSTR CRLCL OPTID .

    $default  reduce using rule 58 (STRUCTDEC)


State 139

   13 E1: WHILE ROP COND RCL CRLOP . $@2 BODY CRLCL

    $default  reduce using rule 12 ($@2)

    $@2  go to state 144


State 140

   65 C: ARROP NUM . $@11 D

    $default  reduce using rule 64 ($@11)

    $@11  go to state 145


State 141

   42 REP: REP ',' NEXT ASSIGN . ANY

    TRUE   shift, and go to state 42
    FALSE  shift, and go to state 43
    NUM    shift, and go to state 44
    ID     shift, and go to state 111
    ROP    shift, and go to state 46

    ANY     go to state 146
    OPTYPE  go to state 51


State 142

   36 STMT: IF ROP COND $@4 RCL CRLOP BODY . CRLCL $@5 ELSE CRLOP $@6 BODY CRLCL

    CRLCL  shift, and go to state 147


State 143

   62 INSSTR: TYPE NEXT $@10 ';' . INSSTR

    INT    shift, and go to state 9
    FLOAT  shift, and go to state 10
    LONG   shift, and go to state 11
    CHAR   shift, and go to state 12

    $default  reduce using rule 63 (INSSTR)

    TYPE    go to state 97
    B       go to state 19
    INSSTR  go to state 148


State 144

   13 E1: WHILE ROP COND RCL CRLOP $@2 . BODY CRLCL

    INC     shift, and go to state 4
    DEC     shift, and go to state 5
    ID      shift, and go to state 6
    IF      shift, and go to state 7
    STRUCT  shift, and go to state 8
    INT     shift, and go to state 9
    FLOAT   shift, and go to state 10
    LONG    shift, and go to state 11
    CHAR    shift, and go to state 12

    CRLCL     reduce using rule 6 (BODY)
    $default  reduce using rule 9 (DUMMY)

    slst       go to state 100
    BODY       go to state 149
    E          go to state 14
    DUMMY      go to state 15
    STMT       go to state 16
    VAR_DEC    go to state 17
    TYPE       go to state 18
    B          go to state 19
    STRUCTDEC  go to state 20
    PRE        go to state 21


State 145

   65 C: ARROP NUM $@11 . D

    ARRCL  shift, and go to state 150

    D  go to state 151


State 146

   42 REP: REP ',' NEXT ASSIGN ANY .

    $default  reduce using rule 42 (REP)


State 147

   36 STMT: IF ROP COND $@4 RCL CRLOP BODY CRLCL . $@5 ELSE CRLOP $@6 BODY CRLCL

    $default  reduce using rule 34 ($@5)

    $@5  go to state 152


State 148

   62 INSSTR: TYPE NEXT $@10 ';' INSSTR .

    $default  reduce using rule 62 (INSSTR)


State 149

   13 E1: WHILE ROP COND RCL CRLOP $@2 BODY . CRLCL

    CRLCL  shift, and go to state 153


State 150

   66 D: ARRCL .
   67  | ARRCL . C

    ARROP  shift, and go to state 129

    $default  reduce using rule 66 (D)

    C  go to state 154


State 151

   65 C: ARROP NUM $@11 D .

    $default  reduce using rule 65 (C)


State 152

   36 STMT: IF ROP COND $@4 RCL CRLOP BODY CRLCL $@5 . ELSE CRLOP $@6 BODY CRLCL

    ELSE  shift, and go to state 155


State 153

   13 E1: WHILE ROP COND RCL CRLOP $@2 BODY CRLCL .

    $default  reduce using rule 13 (E1)


State 154

   67 D: ARRCL C .

    $default  reduce using rule 67 (D)


State 155

   36 STMT: IF ROP COND $@4 RCL CRLOP BODY CRLCL $@5 ELSE . CRLOP $@6 BODY CRLCL

    CRLOP  shift, and go to state 156


State 156

   36 STMT: IF ROP COND $@4 RCL CRLOP BODY CRLCL $@5 ELSE CRLOP . $@6 BODY CRLCL

    $default  reduce using rule 35 ($@6)

    $@6  go to state 157


State 157

   36 STMT: IF ROP COND $@4 RCL CRLOP BODY CRLCL $@5 ELSE CRLOP $@6 . BODY CRLCL

    INC     shift, and go to state 4
    DEC     shift, and go to state 5
    ID      shift, and go to state 6
    IF      shift, and go to state 7
    STRUCT  shift, and go to state 8
    INT     shift, and go to state 9
    FLOAT   shift, and go to state 10
    LONG    shift, and go to state 11
    CHAR    shift, and go to state 12

    CRLCL     reduce using rule 6 (BODY)
    $default  reduce using rule 9 (DUMMY)

    slst       go to state 100
    BODY       go to state 158
    E          go to state 14
    DUMMY      go to state 15
    STMT       go to state 16
    VAR_DEC    go to state 17
    TYPE       go to state 18
    B          go to state 19
    STRUCTDEC  go to state 20
    PRE        go to state 21


State 158

   36 STMT: IF ROP COND $@4 RCL CRLOP BODY CRLCL $@5 ELSE CRLOP $@6 BODY . CRLCL

    CRLCL  shift, and go to state 159


State 159

   36 STMT: IF ROP COND $@4 RCL CRLOP BODY CRLCL $@5 ELSE CRLOP $@6 BODY CRLCL .

    $default  reduce using rule 36 (STMT)
