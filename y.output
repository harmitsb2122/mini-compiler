Terminals unused in grammar

    UMINUS
    '!'


Grammar

    0 $accept: start $end

    1 $@1: %empty

    2 start: $@1 slst

    3 slst: E slst
    4     | E

    5 BODY: slst
    6     | %empty

    7 E: STMT
    8  | DUMMY CONTROL

    9 DUMMY: %empty

   10 CONTROL: E1
   11        | E2

   12 $@2: %empty

   13 E1: WHILE '(' COND ')' CRLOP $@2 BODY CRLCL

   14 $@3: %empty

   15 E2: CRLOP $@3 BODY CRLCL

   16 COND: ANY CMP AFTER
   17     | ID ASSIGN AFTER
   18     | ANY

   19 STMT: VAR_DEC ';'
   20     | STRUCTDEC ';'

   21 $@4: %empty

   22 $@5: %empty

   23 $@6: %empty

   24 STMT: IF '(' COND $@4 ')' CRLOP BODY CRLCL $@5 ELSE CRLOP $@6 BODY CRLCL
   25     | ID ASSIGN AFTER ';'
   26     | PRE ';'

   27 $@7: %empty

   28 VAR_DEC: TYPE $@7 REP

   29 REP: REP ',' NEXT
   30    | REP ',' NEXT ASSIGN ANY
   31    | NEXT
   32    | NEXT ASSIGN ANY

   33 TYPE: B
   34     | B PTRDEC

   35 B: INT
   36  | FLOAT
   37  | CHAR

   38 NEXT: ID
   39     | ARRM

   40 $@8: %empty

   41 ARRM: ID $@8 C

   42 PTRDEC: POINTER PTRDEC
   43       | POINTER

   44 $@9: %empty

   45 STRUCTDEC: STRUCT CRLOP $@9 INSSTR CRLCL OPTID

   46 OPTID: ID
   47      | %empty

   48 $@10: %empty

   49 INSSTR: TYPE NEXT $@10 ';' INSSTR
   50       | %empty

   51 $@11: %empty

   52 C: ARROP NUM $@11 D

   53 D: ARRCL
   54  | ARRCL C

   55 AFTER: AFTER '+' AFTER
   56      | AFTER '-' AFTER
   57      | AFTER XOR AFTER
   58      | AFTER BAND AFTER
   59      | AFTER BOR AFTER
   60      | PRE
   61      | LATER

   62 LATER: LATER POINTER LATER
   63      | LATER '/' LATER
   64      | ANY

   65 PRE: INC ID
   66    | ID INC
   67    | DEC ID
   68    | ID DEC

   69 ANY: NUM
   70    | ID
   71    | TRUE
   72    | FALSE

   73 CMP: EQ
   74    | NEQ
   75    | LOR
   76    | LAND
   77    | LTEQ
   78    | GTEQ
   79    | LT
   80    | GT

   81 ASSIGN: AEQ


Terminals, with rules where they appear

    $end (0) 0
    '!' (33)
    '(' (40) 13 24
    ')' (41) 13 24
    '+' (43) 55
    ',' (44) 29 30
    '-' (45) 56
    '/' (47) 63
    ';' (59) 19 20 25 26 49
    error (256)
    WHILE <string> (258) 13
    TRUE <string> (259) 71
    FALSE <string> (260) 72
    EQ <string> (261) 73
    NEQ <string> (262) 74
    LOR <string> (263) 75
    LAND <string> (264) 76
    LTEQ <string> (265) 77
    GTEQ <string> (266) 78
    LT <string> (267) 79
    GT <string> (268) 80
    XOR <string> (269) 57
    BOR <string> (270) 59
    BAND <string> (271) 58
    AEQ <string> (272) 81
    INC <string> (273) 65 66
    DEC <string> (274) 67 68
    NUM <string> (275) 52 69
    ID <string> (276) 17 25 38 41 46 65 66 67 68 70
    IF <string> (277) 24
    ELSE <string> (278) 24
    STRUCT <string> (279) 45
    INT <string> (280) 35
    FLOAT <string> (281) 36
    POINTER <string> (282) 42 43 62
    CHAR <string> (283) 37
    ARROP <string> (284) 52
    ARRCL <string> (285) 53 54
    CRLOP <string> (286) 13 15 24 45
    CRLCL <string> (287) 13 15 24 45
    UMINUS (288)


Nonterminals, with rules where they appear

    $accept (42)
        on left: 0
    start (43)
        on left: 2
        on right: 0
    $@1 (44)
        on left: 1
        on right: 2
    slst (45)
        on left: 3 4
        on right: 2 3 5
    BODY (46)
        on left: 5 6
        on right: 13 15 24
    E <string> (47)
        on left: 7 8
        on right: 3 4
    DUMMY <string> (48)
        on left: 9
        on right: 8
    CONTROL (49)
        on left: 10 11
        on right: 8
    E1 (50)
        on left: 13
        on right: 10
    $@2 (51)
        on left: 12
        on right: 13
    E2 (52)
        on left: 15
        on right: 11
    $@3 (53)
        on left: 14
        on right: 15
    COND <string> (54)
        on left: 16 17 18
        on right: 13 24
    STMT <string> (55)
        on left: 19 20 24 25 26
        on right: 7
    $@4 (56)
        on left: 21
        on right: 24
    $@5 (57)
        on left: 22
        on right: 24
    $@6 (58)
        on left: 23
        on right: 24
    VAR_DEC <string> (59)
        on left: 28
        on right: 19
    $@7 (60)
        on left: 27
        on right: 28
    REP (61)
        on left: 29 30 31 32
        on right: 28 29 30
    TYPE <string> (62)
        on left: 33 34
        on right: 28 49
    B <string> (63)
        on left: 35 36 37
        on right: 33 34
    NEXT <string> (64)
        on left: 38 39
        on right: 29 30 31 32 49
    ARRM <string> (65)
        on left: 41
        on right: 39
    $@8 (66)
        on left: 40
        on right: 41
    PTRDEC (67)
        on left: 42 43
        on right: 34 42
    STRUCTDEC <string> (68)
        on left: 45
        on right: 20
    $@9 (69)
        on left: 44
        on right: 45
    OPTID <string> (70)
        on left: 46 47
        on right: 45
    INSSTR <string> (71)
        on left: 49 50
        on right: 45 49
    $@10 (72)
        on left: 48
        on right: 49
    C <string> (73)
        on left: 52
        on right: 41 54
    $@11 (74)
        on left: 51
        on right: 52
    D <string> (75)
        on left: 53 54
        on right: 52
    AFTER <string> (76)
        on left: 55 56 57 58 59 60 61
        on right: 16 17 25 55 56 57 58 59
    LATER <string> (77)
        on left: 62 63 64
        on right: 61 62 63
    PRE <string> (78)
        on left: 65 66 67 68
        on right: 26 60
    ANY <string> (79)
        on left: 69 70 71 72
        on right: 16 18 30 32 64
    CMP <string> (80)
        on left: 73 74 75 76 77 78 79 80
        on right: 16
    ASSIGN <string> (81)
        on left: 81
        on right: 17 25 30 32


State 0

    0 $accept: . start $end

    $default  reduce using rule 1 ($@1)

    start  go to state 1
    $@1    go to state 2


State 1

    0 $accept: start . $end

    $end  shift, and go to state 3


State 2

    2 start: $@1 . slst

    INC     shift, and go to state 4
    DEC     shift, and go to state 5
    ID      shift, and go to state 6
    IF      shift, and go to state 7
    STRUCT  shift, and go to state 8
    INT     shift, and go to state 9
    FLOAT   shift, and go to state 10
    CHAR    shift, and go to state 11

    $default  reduce using rule 9 (DUMMY)

    slst       go to state 12
    E          go to state 13
    DUMMY      go to state 14
    STMT       go to state 15
    VAR_DEC    go to state 16
    TYPE       go to state 17
    B          go to state 18
    STRUCTDEC  go to state 19
    PRE        go to state 20


State 3

    0 $accept: start $end .

    $default  accept


State 4

   65 PRE: INC . ID

    ID  shift, and go to state 21


State 5

   67 PRE: DEC . ID

    ID  shift, and go to state 22


State 6

   25 STMT: ID . ASSIGN AFTER ';'
   66 PRE: ID . INC
   68    | ID . DEC

    AEQ  shift, and go to state 23
    INC  shift, and go to state 24
    DEC  shift, and go to state 25

    ASSIGN  go to state 26


State 7

   24 STMT: IF . '(' COND $@4 ')' CRLOP BODY CRLCL $@5 ELSE CRLOP $@6 BODY CRLCL

    '('  shift, and go to state 27


State 8

   45 STRUCTDEC: STRUCT . CRLOP $@9 INSSTR CRLCL OPTID

    CRLOP  shift, and go to state 28


State 9

   35 B: INT .

    $default  reduce using rule 35 (B)


State 10

   36 B: FLOAT .

    $default  reduce using rule 36 (B)


State 11

   37 B: CHAR .

    $default  reduce using rule 37 (B)


State 12

    2 start: $@1 slst .

    $default  reduce using rule 2 (start)


State 13

    3 slst: E . slst
    4     | E .

    INC     shift, and go to state 4
    DEC     shift, and go to state 5
    ID      shift, and go to state 6
    IF      shift, and go to state 7
    STRUCT  shift, and go to state 8
    INT     shift, and go to state 9
    FLOAT   shift, and go to state 10
    CHAR    shift, and go to state 11

    WHILE     reduce using rule 9 (DUMMY)
    CRLOP     reduce using rule 9 (DUMMY)
    $default  reduce using rule 4 (slst)

    slst       go to state 29
    E          go to state 13
    DUMMY      go to state 14
    STMT       go to state 15
    VAR_DEC    go to state 16
    TYPE       go to state 17
    B          go to state 18
    STRUCTDEC  go to state 19
    PRE        go to state 20


State 14

    8 E: DUMMY . CONTROL

    WHILE  shift, and go to state 30
    CRLOP  shift, and go to state 31

    CONTROL  go to state 32
    E1       go to state 33
    E2       go to state 34


State 15

    7 E: STMT .

    $default  reduce using rule 7 (E)


State 16

   19 STMT: VAR_DEC . ';'

    ';'  shift, and go to state 35


State 17

   28 VAR_DEC: TYPE . $@7 REP

    $default  reduce using rule 27 ($@7)

    $@7  go to state 36


State 18

   33 TYPE: B .
   34     | B . PTRDEC

    POINTER  shift, and go to state 37

    $default  reduce using rule 33 (TYPE)

    PTRDEC  go to state 38


State 19

   20 STMT: STRUCTDEC . ';'

    ';'  shift, and go to state 39


State 20

   26 STMT: PRE . ';'

    ';'  shift, and go to state 40


State 21

   65 PRE: INC ID .

    $default  reduce using rule 65 (PRE)


State 22

   67 PRE: DEC ID .

    $default  reduce using rule 67 (PRE)


State 23

   81 ASSIGN: AEQ .

    $default  reduce using rule 81 (ASSIGN)


State 24

   66 PRE: ID INC .

    $default  reduce using rule 66 (PRE)


State 25

   68 PRE: ID DEC .

    $default  reduce using rule 68 (PRE)


State 26

   25 STMT: ID ASSIGN . AFTER ';'

    TRUE   shift, and go to state 41
    FALSE  shift, and go to state 42
    INC    shift, and go to state 4
    DEC    shift, and go to state 5
    NUM    shift, and go to state 43
    ID     shift, and go to state 44

    AFTER  go to state 45
    LATER  go to state 46
    PRE    go to state 47
    ANY    go to state 48


State 27

   24 STMT: IF '(' . COND $@4 ')' CRLOP BODY CRLCL $@5 ELSE CRLOP $@6 BODY CRLCL

    TRUE   shift, and go to state 41
    FALSE  shift, and go to state 42
    NUM    shift, and go to state 43
    ID     shift, and go to state 49

    COND  go to state 50
    ANY   go to state 51


State 28

   45 STRUCTDEC: STRUCT CRLOP . $@9 INSSTR CRLCL OPTID

    $default  reduce using rule 44 ($@9)

    $@9  go to state 52


State 29

    3 slst: E slst .

    $default  reduce using rule 3 (slst)


State 30

   13 E1: WHILE . '(' COND ')' CRLOP $@2 BODY CRLCL

    '('  shift, and go to state 53


State 31

   15 E2: CRLOP . $@3 BODY CRLCL

    $default  reduce using rule 14 ($@3)

    $@3  go to state 54


State 32

    8 E: DUMMY CONTROL .

    $default  reduce using rule 8 (E)


State 33

   10 CONTROL: E1 .

    $default  reduce using rule 10 (CONTROL)


State 34

   11 CONTROL: E2 .

    $default  reduce using rule 11 (CONTROL)


State 35

   19 STMT: VAR_DEC ';' .

    $default  reduce using rule 19 (STMT)


State 36

   28 VAR_DEC: TYPE $@7 . REP

    ID  shift, and go to state 55

    REP   go to state 56
    NEXT  go to state 57
    ARRM  go to state 58


State 37

   42 PTRDEC: POINTER . PTRDEC
   43       | POINTER .

    POINTER  shift, and go to state 37

    $default  reduce using rule 43 (PTRDEC)

    PTRDEC  go to state 59


State 38

   34 TYPE: B PTRDEC .

    $default  reduce using rule 34 (TYPE)


State 39

   20 STMT: STRUCTDEC ';' .

    $default  reduce using rule 20 (STMT)


State 40

   26 STMT: PRE ';' .

    $default  reduce using rule 26 (STMT)


State 41

   71 ANY: TRUE .

    $default  reduce using rule 71 (ANY)


State 42

   72 ANY: FALSE .

    $default  reduce using rule 72 (ANY)


State 43

   69 ANY: NUM .

    $default  reduce using rule 69 (ANY)


State 44

   66 PRE: ID . INC
   68    | ID . DEC
   70 ANY: ID .

    INC  shift, and go to state 24
    DEC  shift, and go to state 25

    $default  reduce using rule 70 (ANY)


State 45

   25 STMT: ID ASSIGN AFTER . ';'
   55 AFTER: AFTER . '+' AFTER
   56      | AFTER . '-' AFTER
   57      | AFTER . XOR AFTER
   58      | AFTER . BAND AFTER
   59      | AFTER . BOR AFTER

    XOR   shift, and go to state 60
    BOR   shift, and go to state 61
    BAND  shift, and go to state 62
    '+'   shift, and go to state 63
    '-'   shift, and go to state 64
    ';'   shift, and go to state 65


State 46

   61 AFTER: LATER .
   62 LATER: LATER . POINTER LATER
   63      | LATER . '/' LATER

    POINTER  shift, and go to state 66
    '/'      shift, and go to state 67

    $default  reduce using rule 61 (AFTER)


State 47

   60 AFTER: PRE .

    $default  reduce using rule 60 (AFTER)


State 48

   64 LATER: ANY .

    $default  reduce using rule 64 (LATER)


State 49

   17 COND: ID . ASSIGN AFTER
   70 ANY: ID .

    AEQ  shift, and go to state 23

    $default  reduce using rule 70 (ANY)

    ASSIGN  go to state 68


State 50

   24 STMT: IF '(' COND . $@4 ')' CRLOP BODY CRLCL $@5 ELSE CRLOP $@6 BODY CRLCL

    $default  reduce using rule 21 ($@4)

    $@4  go to state 69


State 51

   16 COND: ANY . CMP AFTER
   18     | ANY .

    EQ    shift, and go to state 70
    NEQ   shift, and go to state 71
    LOR   shift, and go to state 72
    LAND  shift, and go to state 73
    LTEQ  shift, and go to state 74
    GTEQ  shift, and go to state 75
    LT    shift, and go to state 76
    GT    shift, and go to state 77

    $default  reduce using rule 18 (COND)

    CMP  go to state 78


State 52

   45 STRUCTDEC: STRUCT CRLOP $@9 . INSSTR CRLCL OPTID

    INT    shift, and go to state 9
    FLOAT  shift, and go to state 10
    CHAR   shift, and go to state 11

    $default  reduce using rule 50 (INSSTR)

    TYPE    go to state 79
    B       go to state 18
    INSSTR  go to state 80


State 53

   13 E1: WHILE '(' . COND ')' CRLOP $@2 BODY CRLCL

    TRUE   shift, and go to state 41
    FALSE  shift, and go to state 42
    NUM    shift, and go to state 43
    ID     shift, and go to state 49

    COND  go to state 81
    ANY   go to state 51


State 54

   15 E2: CRLOP $@3 . BODY CRLCL

    INC     shift, and go to state 4
    DEC     shift, and go to state 5
    ID      shift, and go to state 6
    IF      shift, and go to state 7
    STRUCT  shift, and go to state 8
    INT     shift, and go to state 9
    FLOAT   shift, and go to state 10
    CHAR    shift, and go to state 11

    CRLCL     reduce using rule 6 (BODY)
    $default  reduce using rule 9 (DUMMY)

    slst       go to state 82
    BODY       go to state 83
    E          go to state 13
    DUMMY      go to state 14
    STMT       go to state 15
    VAR_DEC    go to state 16
    TYPE       go to state 17
    B          go to state 18
    STRUCTDEC  go to state 19
    PRE        go to state 20


State 55

   38 NEXT: ID .
   41 ARRM: ID . $@8 C

    ARROP     reduce using rule 40 ($@8)
    $default  reduce using rule 38 (NEXT)

    $@8  go to state 84


State 56

   28 VAR_DEC: TYPE $@7 REP .
   29 REP: REP . ',' NEXT
   30    | REP . ',' NEXT ASSIGN ANY

    ','  shift, and go to state 85

    $default  reduce using rule 28 (VAR_DEC)


State 57

   31 REP: NEXT .
   32    | NEXT . ASSIGN ANY

    AEQ  shift, and go to state 23

    $default  reduce using rule 31 (REP)

    ASSIGN  go to state 86


State 58

   39 NEXT: ARRM .

    $default  reduce using rule 39 (NEXT)


State 59

   42 PTRDEC: POINTER PTRDEC .

    $default  reduce using rule 42 (PTRDEC)


State 60

   57 AFTER: AFTER XOR . AFTER

    TRUE   shift, and go to state 41
    FALSE  shift, and go to state 42
    INC    shift, and go to state 4
    DEC    shift, and go to state 5
    NUM    shift, and go to state 43
    ID     shift, and go to state 44

    AFTER  go to state 87
    LATER  go to state 46
    PRE    go to state 47
    ANY    go to state 48


State 61

   59 AFTER: AFTER BOR . AFTER

    TRUE   shift, and go to state 41
    FALSE  shift, and go to state 42
    INC    shift, and go to state 4
    DEC    shift, and go to state 5
    NUM    shift, and go to state 43
    ID     shift, and go to state 44

    AFTER  go to state 88
    LATER  go to state 46
    PRE    go to state 47
    ANY    go to state 48


State 62

   58 AFTER: AFTER BAND . AFTER

    TRUE   shift, and go to state 41
    FALSE  shift, and go to state 42
    INC    shift, and go to state 4
    DEC    shift, and go to state 5
    NUM    shift, and go to state 43
    ID     shift, and go to state 44

    AFTER  go to state 89
    LATER  go to state 46
    PRE    go to state 47
    ANY    go to state 48


State 63

   55 AFTER: AFTER '+' . AFTER

    TRUE   shift, and go to state 41
    FALSE  shift, and go to state 42
    INC    shift, and go to state 4
    DEC    shift, and go to state 5
    NUM    shift, and go to state 43
    ID     shift, and go to state 44

    AFTER  go to state 90
    LATER  go to state 46
    PRE    go to state 47
    ANY    go to state 48


State 64

   56 AFTER: AFTER '-' . AFTER

    TRUE   shift, and go to state 41
    FALSE  shift, and go to state 42
    INC    shift, and go to state 4
    DEC    shift, and go to state 5
    NUM    shift, and go to state 43
    ID     shift, and go to state 44

    AFTER  go to state 91
    LATER  go to state 46
    PRE    go to state 47
    ANY    go to state 48


State 65

   25 STMT: ID ASSIGN AFTER ';' .

    $default  reduce using rule 25 (STMT)


State 66

   62 LATER: LATER POINTER . LATER

    TRUE   shift, and go to state 41
    FALSE  shift, and go to state 42
    NUM    shift, and go to state 43
    ID     shift, and go to state 92

    LATER  go to state 93
    ANY    go to state 48


State 67

   63 LATER: LATER '/' . LATER

    TRUE   shift, and go to state 41
    FALSE  shift, and go to state 42
    NUM    shift, and go to state 43
    ID     shift, and go to state 92

    LATER  go to state 94
    ANY    go to state 48


State 68

   17 COND: ID ASSIGN . AFTER

    TRUE   shift, and go to state 41
    FALSE  shift, and go to state 42
    INC    shift, and go to state 4
    DEC    shift, and go to state 5
    NUM    shift, and go to state 43
    ID     shift, and go to state 44

    AFTER  go to state 95
    LATER  go to state 46
    PRE    go to state 47
    ANY    go to state 48


State 69

   24 STMT: IF '(' COND $@4 . ')' CRLOP BODY CRLCL $@5 ELSE CRLOP $@6 BODY CRLCL

    ')'  shift, and go to state 96


State 70

   73 CMP: EQ .

    $default  reduce using rule 73 (CMP)


State 71

   74 CMP: NEQ .

    $default  reduce using rule 74 (CMP)


State 72

   75 CMP: LOR .

    $default  reduce using rule 75 (CMP)


State 73

   76 CMP: LAND .

    $default  reduce using rule 76 (CMP)


State 74

   77 CMP: LTEQ .

    $default  reduce using rule 77 (CMP)


State 75

   78 CMP: GTEQ .

    $default  reduce using rule 78 (CMP)


State 76

   79 CMP: LT .

    $default  reduce using rule 79 (CMP)


State 77

   80 CMP: GT .

    $default  reduce using rule 80 (CMP)


State 78

   16 COND: ANY CMP . AFTER

    TRUE   shift, and go to state 41
    FALSE  shift, and go to state 42
    INC    shift, and go to state 4
    DEC    shift, and go to state 5
    NUM    shift, and go to state 43
    ID     shift, and go to state 44

    AFTER  go to state 97
    LATER  go to state 46
    PRE    go to state 47
    ANY    go to state 48


State 79

   49 INSSTR: TYPE . NEXT $@10 ';' INSSTR

    ID  shift, and go to state 55

    NEXT  go to state 98
    ARRM  go to state 58


State 80

   45 STRUCTDEC: STRUCT CRLOP $@9 INSSTR . CRLCL OPTID

    CRLCL  shift, and go to state 99


State 81

   13 E1: WHILE '(' COND . ')' CRLOP $@2 BODY CRLCL

    ')'  shift, and go to state 100


State 82

    5 BODY: slst .

    $default  reduce using rule 5 (BODY)


State 83

   15 E2: CRLOP $@3 BODY . CRLCL

    CRLCL  shift, and go to state 101


State 84

   41 ARRM: ID $@8 . C

    ARROP  shift, and go to state 102

    C  go to state 103


State 85

   29 REP: REP ',' . NEXT
   30    | REP ',' . NEXT ASSIGN ANY

    ID  shift, and go to state 55

    NEXT  go to state 104
    ARRM  go to state 58


State 86

   32 REP: NEXT ASSIGN . ANY

    TRUE   shift, and go to state 41
    FALSE  shift, and go to state 42
    NUM    shift, and go to state 43
    ID     shift, and go to state 92

    ANY  go to state 105


State 87

   55 AFTER: AFTER . '+' AFTER
   56      | AFTER . '-' AFTER
   57      | AFTER . XOR AFTER
   57      | AFTER XOR AFTER .
   58      | AFTER . BAND AFTER
   59      | AFTER . BOR AFTER

    $default  reduce using rule 57 (AFTER)


State 88

   55 AFTER: AFTER . '+' AFTER
   56      | AFTER . '-' AFTER
   57      | AFTER . XOR AFTER
   58      | AFTER . BAND AFTER
   59      | AFTER . BOR AFTER
   59      | AFTER BOR AFTER .

    $default  reduce using rule 59 (AFTER)


State 89

   55 AFTER: AFTER . '+' AFTER
   56      | AFTER . '-' AFTER
   57      | AFTER . XOR AFTER
   58      | AFTER . BAND AFTER
   58      | AFTER BAND AFTER .
   59      | AFTER . BOR AFTER

    $default  reduce using rule 58 (AFTER)


State 90

   55 AFTER: AFTER . '+' AFTER
   55      | AFTER '+' AFTER .
   56      | AFTER . '-' AFTER
   57      | AFTER . XOR AFTER
   58      | AFTER . BAND AFTER
   59      | AFTER . BOR AFTER

    XOR   shift, and go to state 60
    BOR   shift, and go to state 61
    BAND  shift, and go to state 62

    $default  reduce using rule 55 (AFTER)


State 91

   55 AFTER: AFTER . '+' AFTER
   56      | AFTER . '-' AFTER
   56      | AFTER '-' AFTER .
   57      | AFTER . XOR AFTER
   58      | AFTER . BAND AFTER
   59      | AFTER . BOR AFTER

    XOR   shift, and go to state 60
    BOR   shift, and go to state 61
    BAND  shift, and go to state 62

    $default  reduce using rule 56 (AFTER)


State 92

   70 ANY: ID .

    $default  reduce using rule 70 (ANY)


State 93

   62 LATER: LATER . POINTER LATER
   62      | LATER POINTER LATER .
   63      | LATER . '/' LATER

    $default  reduce using rule 62 (LATER)


State 94

   62 LATER: LATER . POINTER LATER
   63      | LATER . '/' LATER
   63      | LATER '/' LATER .

    $default  reduce using rule 63 (LATER)


State 95

   17 COND: ID ASSIGN AFTER .
   55 AFTER: AFTER . '+' AFTER
   56      | AFTER . '-' AFTER
   57      | AFTER . XOR AFTER
   58      | AFTER . BAND AFTER
   59      | AFTER . BOR AFTER

    XOR   shift, and go to state 60
    BOR   shift, and go to state 61
    BAND  shift, and go to state 62
    '+'   shift, and go to state 63
    '-'   shift, and go to state 64

    $default  reduce using rule 17 (COND)


State 96

   24 STMT: IF '(' COND $@4 ')' . CRLOP BODY CRLCL $@5 ELSE CRLOP $@6 BODY CRLCL

    CRLOP  shift, and go to state 106


State 97

   16 COND: ANY CMP AFTER .
   55 AFTER: AFTER . '+' AFTER
   56      | AFTER . '-' AFTER
   57      | AFTER . XOR AFTER
   58      | AFTER . BAND AFTER
   59      | AFTER . BOR AFTER

    XOR   shift, and go to state 60
    BOR   shift, and go to state 61
    BAND  shift, and go to state 62
    '+'   shift, and go to state 63
    '-'   shift, and go to state 64

    $default  reduce using rule 16 (COND)


State 98

   49 INSSTR: TYPE NEXT . $@10 ';' INSSTR

    $default  reduce using rule 48 ($@10)

    $@10  go to state 107


State 99

   45 STRUCTDEC: STRUCT CRLOP $@9 INSSTR CRLCL . OPTID

    ID  shift, and go to state 108

    $default  reduce using rule 47 (OPTID)

    OPTID  go to state 109


State 100

   13 E1: WHILE '(' COND ')' . CRLOP $@2 BODY CRLCL

    CRLOP  shift, and go to state 110


State 101

   15 E2: CRLOP $@3 BODY CRLCL .

    $default  reduce using rule 15 (E2)


State 102

   52 C: ARROP . NUM $@11 D

    NUM  shift, and go to state 111


State 103

   41 ARRM: ID $@8 C .

    $default  reduce using rule 41 (ARRM)


State 104

   29 REP: REP ',' NEXT .
   30    | REP ',' NEXT . ASSIGN ANY

    AEQ  shift, and go to state 23

    $default  reduce using rule 29 (REP)

    ASSIGN  go to state 112


State 105

   32 REP: NEXT ASSIGN ANY .

    $default  reduce using rule 32 (REP)


State 106

   24 STMT: IF '(' COND $@4 ')' CRLOP . BODY CRLCL $@5 ELSE CRLOP $@6 BODY CRLCL

    INC     shift, and go to state 4
    DEC     shift, and go to state 5
    ID      shift, and go to state 6
    IF      shift, and go to state 7
    STRUCT  shift, and go to state 8
    INT     shift, and go to state 9
    FLOAT   shift, and go to state 10
    CHAR    shift, and go to state 11

    CRLCL     reduce using rule 6 (BODY)
    $default  reduce using rule 9 (DUMMY)

    slst       go to state 82
    BODY       go to state 113
    E          go to state 13
    DUMMY      go to state 14
    STMT       go to state 15
    VAR_DEC    go to state 16
    TYPE       go to state 17
    B          go to state 18
    STRUCTDEC  go to state 19
    PRE        go to state 20


State 107

   49 INSSTR: TYPE NEXT $@10 . ';' INSSTR

    ';'  shift, and go to state 114


State 108

   46 OPTID: ID .

    $default  reduce using rule 46 (OPTID)


State 109

   45 STRUCTDEC: STRUCT CRLOP $@9 INSSTR CRLCL OPTID .

    $default  reduce using rule 45 (STRUCTDEC)


State 110

   13 E1: WHILE '(' COND ')' CRLOP . $@2 BODY CRLCL

    $default  reduce using rule 12 ($@2)

    $@2  go to state 115


State 111

   52 C: ARROP NUM . $@11 D

    $default  reduce using rule 51 ($@11)

    $@11  go to state 116


State 112

   30 REP: REP ',' NEXT ASSIGN . ANY

    TRUE   shift, and go to state 41
    FALSE  shift, and go to state 42
    NUM    shift, and go to state 43
    ID     shift, and go to state 92

    ANY  go to state 117


State 113

   24 STMT: IF '(' COND $@4 ')' CRLOP BODY . CRLCL $@5 ELSE CRLOP $@6 BODY CRLCL

    CRLCL  shift, and go to state 118


State 114

   49 INSSTR: TYPE NEXT $@10 ';' . INSSTR

    INT    shift, and go to state 9
    FLOAT  shift, and go to state 10
    CHAR   shift, and go to state 11

    $default  reduce using rule 50 (INSSTR)

    TYPE    go to state 79
    B       go to state 18
    INSSTR  go to state 119


State 115

   13 E1: WHILE '(' COND ')' CRLOP $@2 . BODY CRLCL

    INC     shift, and go to state 4
    DEC     shift, and go to state 5
    ID      shift, and go to state 6
    IF      shift, and go to state 7
    STRUCT  shift, and go to state 8
    INT     shift, and go to state 9
    FLOAT   shift, and go to state 10
    CHAR    shift, and go to state 11

    CRLCL     reduce using rule 6 (BODY)
    $default  reduce using rule 9 (DUMMY)

    slst       go to state 82
    BODY       go to state 120
    E          go to state 13
    DUMMY      go to state 14
    STMT       go to state 15
    VAR_DEC    go to state 16
    TYPE       go to state 17
    B          go to state 18
    STRUCTDEC  go to state 19
    PRE        go to state 20


State 116

   52 C: ARROP NUM $@11 . D

    ARRCL  shift, and go to state 121

    D  go to state 122


State 117

   30 REP: REP ',' NEXT ASSIGN ANY .

    $default  reduce using rule 30 (REP)


State 118

   24 STMT: IF '(' COND $@4 ')' CRLOP BODY CRLCL . $@5 ELSE CRLOP $@6 BODY CRLCL

    $default  reduce using rule 22 ($@5)

    $@5  go to state 123


State 119

   49 INSSTR: TYPE NEXT $@10 ';' INSSTR .

    $default  reduce using rule 49 (INSSTR)


State 120

   13 E1: WHILE '(' COND ')' CRLOP $@2 BODY . CRLCL

    CRLCL  shift, and go to state 124


State 121

   53 D: ARRCL .
   54  | ARRCL . C

    ARROP  shift, and go to state 102

    $default  reduce using rule 53 (D)

    C  go to state 125


State 122

   52 C: ARROP NUM $@11 D .

    $default  reduce using rule 52 (C)


State 123

   24 STMT: IF '(' COND $@4 ')' CRLOP BODY CRLCL $@5 . ELSE CRLOP $@6 BODY CRLCL

    ELSE  shift, and go to state 126


State 124

   13 E1: WHILE '(' COND ')' CRLOP $@2 BODY CRLCL .

    $default  reduce using rule 13 (E1)


State 125

   54 D: ARRCL C .

    $default  reduce using rule 54 (D)


State 126

   24 STMT: IF '(' COND $@4 ')' CRLOP BODY CRLCL $@5 ELSE . CRLOP $@6 BODY CRLCL

    CRLOP  shift, and go to state 127


State 127

   24 STMT: IF '(' COND $@4 ')' CRLOP BODY CRLCL $@5 ELSE CRLOP . $@6 BODY CRLCL

    $default  reduce using rule 23 ($@6)

    $@6  go to state 128


State 128

   24 STMT: IF '(' COND $@4 ')' CRLOP BODY CRLCL $@5 ELSE CRLOP $@6 . BODY CRLCL

    INC     shift, and go to state 4
    DEC     shift, and go to state 5
    ID      shift, and go to state 6
    IF      shift, and go to state 7
    STRUCT  shift, and go to state 8
    INT     shift, and go to state 9
    FLOAT   shift, and go to state 10
    CHAR    shift, and go to state 11

    CRLCL     reduce using rule 6 (BODY)
    $default  reduce using rule 9 (DUMMY)

    slst       go to state 82
    BODY       go to state 129
    E          go to state 13
    DUMMY      go to state 14
    STMT       go to state 15
    VAR_DEC    go to state 16
    TYPE       go to state 17
    B          go to state 18
    STRUCTDEC  go to state 19
    PRE        go to state 20


State 129

   24 STMT: IF '(' COND $@4 ')' CRLOP BODY CRLCL $@5 ELSE CRLOP $@6 BODY . CRLCL

    CRLCL  shift, and go to state 130


State 130

   24 STMT: IF '(' COND $@4 ')' CRLOP BODY CRLCL $@5 ELSE CRLOP $@6 BODY CRLCL .

    $default  reduce using rule 24 (STMT)
